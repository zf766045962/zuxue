<?php exit("Access deny");?>
TRUNCATE TABLE `xsmart_exam`;
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("1","传感器的使用测试题1","","1","1432623912","1432623912","1","2","<p>习题解析习题解析1123<br /></p>","","正确","错误","","","","","187","3"),("2","新的试题","","2","1432648350","1432648350","2","3","","","答案1","答案2","答案3","答案4","","","187","1"),("3","多选题试题","","0","1432649832","1432649832","2","3,4","","","多选题答案1","多选题答案2","多选题答案3","多选题答案4","多选题答案5","多选题答案6","187","2"),("4","新的多选题","","0","1432710278","1432710278","1","1,4,5","","","答案1","答案2","答案3","答案4","答案5","答案6","187","2"),("5","对网络营销的认识，以下哪种说法是正确的","","1","1432732246","1432732246","2","2,3","","","网络营销就是网上销售","网络营销不局限于网上","网络营销不是孤立存在的","网络营销等于电子商务","","","51","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("340","在扩展关键词时，我们应先确定产品词；","","0","1434100488","1434100488","1","1","","","正确","错误","","","","","135","3"),("6","简历的三要素有哪些？","","0","1432890997","1432890997","1","1,3,6","","","内容","架构","定位","格式","条理","创意","102","2"),("7","对于技术简历来说，简历上可以体现哪些内容？","","0","1432891351","1432891351","1","1,2,3,4,5,6","","","基本信息","求职意向","教育背景","专业技能","项目经验","工作经验","102","2"),("8","写简历时，要采用倒叙的方法，即从最近的时间写起？","","0","1432891518","1432891518","1","1","","","正确","错误","","","","","102","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("9","在技术简历中，一定要体现专业技能和项目经验这两个信息吗？","","0","1432891661","1432891661","1","1","","","是","不是","","","","","102","3"),("10","简历名称可以写成“我的简历”吗？","","0","1432891829","1432891829","1","2","","","可以","不可以","","","","","102","3"),("11","技术简历可以是一页简历吗？","","0","1432891905","1432891905","1","2","","","可以","不可以","","","","","102","3"),("12","求职意向中的意向职位可以写3个以上。","","0","1432892124","1432892124","1","2","","","正确","错误","","","","","102","3"),("13","面试中被问到的各种问题，应聘者的回答都是临场发挥的。","","0","1432892214","1432892214","1","2","","","正确","错误","","","","","104","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("14","收到面试通知邮件需要及时回复。","","0","1432892547","1432892547","1","1","","","正确","错误","","","","","104","3"),("15","对于技术人员来说，面试时有项目演示效果更好。","","0","1432892613","1432892613","1","1","","","正确","错误","","","","","104","3"),("16","个人仪表对面试结果影响不大。","","0","1432892699","1432892699","1","2","","","正确","错误","","","","","104","3"),("17","如果面试要迟到，需要提前跟公司说明情况。","","0","1432892791","1432892791","1","1","","","正确","错误","","","","","104","3"),("18","面试时，跟面试官可以没有眼神交流。","","0","1432892907","1432892907","1","2","","","正确","错误","","","","","104","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("19","在面试前，需要对公司有充分了解。","","0","1432892981","1432892981","1","1","","","正确","错误","","","","","104","3"),("20","1.	20世纪70年代，AT&T公司贝尔实验室的肯·汤普森、丹尼斯·里奇和布莱恩·克利安最早开发了C语言","","0","1433214502","1433214502","1","1","","","正确","错误","","","","","105","1"),("21","C语言不允许程序员对硬件进行编程。不能访问存储器","","0","1433214525","1433214525","1","2","","","正确","错误","","","","","105","1"),("22","C语言的标准由美国国家标准协会（ANSI）制定并维护","","0","1433214598","1433214598","1","1","","","正确","错误","","","","","105","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("23","一个C语言程序可以包含多个main函数 ","","0","1433214627","1433214627","1","2","","","正确","错误","","","","","105","0"),("24","C语言是面向过程的编程语言 ","","0","1433214660","1433214660","1","1","","","正确","错误","","","","","105","1"),("27","c语言特点","","0","1433215086","1433215086","2","1,2,3,4","","","语言简洁、紧凑，使用灵活方便。 ","运算符丰富，灵活运用运算符可以实现在其他高级语言中难以实现的运算","运算符丰富","可移植性好","","","105","2"),("26","C语言程序执行包括 ","","0","1433214873","1433214873","2","1,2,3,4","","","编写","编译","链接","运行","","","105","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("28","C语言基本数据类型包括","","0","1433216516","1433216516","1","1,2,3","","","整型","字符型","浮点型","字符串型","","","106","2"),("29","浮点型包括","","0","1433216575","1433216575","1","1,2","","","float","double","int","char","","","106","2"),("30","常用转译字符包括","","0","1433216611","1433216611","1","1,2,3,4","","","\\\'\\\\t\\\'","\\\'\\\\r\\\'","\\\'\\\\n\\\'","\\\'\\\\\\\\\\\'","","","106","2"),("31","字符型存储范围-128 到 127","","0","1433216665","1433216665","1","1","","","正确","错误","","","","","106","3"),("32","字符型可以转换成整型","","0","1433216689","1433216689","1","1","","","正确","错误","","","","","106","3"),("33","一次可以声明多个变量","","0","1433217658","1433217658","1","1","","","正确","错误","","","","","108","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("34","变量可以先声明后赋值","","0","1433217704","1433217704","1","1","","","正确","错误","","","","","108","3"),("35","变量的命名规则","","0","1433217760","1433217760","1","1,2,3,4","","","变量名称中只能包含字母数字下划线","不能以数字开头","变量名不能是关键字","严格区分大小写","","","108","2"),("36","以下哪项不属于变量的三要素","","0","1433217835","1433217835","1","3","","","类型","名称","使用","初始化","","","108","1"),("37","整型的占位符是","","0","1433217912","1433217912","1","2","","","%f","%d","%c","%s","","","108","1"),("38","浮点型的数据%7.2f  表示，一共有七位数字包括小数点。小数点后保存两位有效数字","","0","1433217954","1433217954","2","1","","","正确","错误","","","","","108","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("39","int  a;  double b=10.25; a=(int )b; ","","0","1433229678","1433229678","1","1","","","正确","错误","","","","","110","3"),("40","int a=12.35;","","0","1433229732","1433229732","1","1","","","正确","错误","","","","","110","3"),("41","C语言类型转换氛围几种情况","","0","1433229750","1433229750","1","1,2","","","显示转换","隐士转换","条件转换","分类转换","","","110","2"),("42","给定某C程序片断，如下：     int i = 1;     int j = i++;     if((i > ++j) && (i++ == j))     i += j;     printf(i);     该程序运行后，i的输出结果是","","0","1433233413","1433233413","2","2","","","1","2","3","4","","","112","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("43","分析如下C语言代码片段： 	   int i=2,j; 	   i++; 	   j=i; 	   printf(\\\"(%d,%d)\\\",i,j); 	输出结果为","","0","1433233449","1433233449","1","2","","","2，3","3，3","3，2","2，2","","","112","1"),("44","在C语言中，假设所有变量均为整型，则下列代码执行后c的值是（）。 	a=2;b=5;b++;c=a+b;","","0","1433233500","1433233500","1","4","","","2","6","7","8","","","112","0"),("45","设x、y均为整型变量，且 x = 10 y = 3，则以下C语句的输出结果是（）。 	 printf(“%d,%d” ,x--,--y);","","0","1433233534","1433233534","2","4","","","10,3","9,3","9,2","10,2","","","112","1"),("46","在C语言中，考虑以下代码段： 	j=2,k=3 	v=j-- - ++k; 	通过运算后，V的值是","","0","1433233604","1433233604","1","4","","","1","-3","-1","-2","","","112","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("47","C语言中输入函数scanf（）整型的占位符是什么","","0","1433234292","1433234292","1","1","","","%d","%C","%s","%f","","","115","1"),("48"," C语言关系表达式只有0和1两种情况 ","","0","1433314199","1433314199","1","1","","","正确","错误","","","","","117","3"),("49","字母 a的ascii值是","","0","1433314467","1433314467","1","1","","","97","98","65","66","","","117","1"),("50","常用关系运算符有几种","","0","1433314499","1433314499","1","1,2,3,4,5,6","","",">","<",">=","<=","==","!=","117","2"),("51","当两个条件都为真结果才为真使用什么逻辑运算符","","0","1433315887","1433315887","1","2","","","||","&&","！","^","","","120","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("52","int i = 15, j = 30; double a = 12.0, b = 2.0; 给定如下表达式 i == j || a < b  结果是假","","0","1433315916","1433315916","1","1","","","正确","错误","","","","","120","3"),("53","逻辑运算符中 “！”的优先级最高","","0","1433316068","1433316068","1","1","","","正确","错误","","","","","124","3"),("54","通过括号可以提高运算的优先级","","0","1433316094","1433316094","1","1","","","正确","错误","","","","","124","3"),("55","给定某C程序片断，如下：     int i = 1;     int j = i++;     if((i > ++j) && (i++ == j))     i += j;     printf(i); 该程序运行后，i的输出结果是","","0","1433316372","1433316372","1","2","","","1","2","3","4","","","126","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("56","给定一个C程序的代码片段， 如下： if(grade==\\\'A\\\' || grade == \\\'B\\\') score=90; else if(grade==\\\'C\\\'||grade==\\\'D\\\') score=70; 	else score=60; 语法是否正确","","0","1433316606","1433316606","1","1","","","正确","错误","","","","","129","3"),("57","给定一个C程序的代码片段， 如下： if(grade==\\\'A\\\' || grade == \\\'B\\\') score=90; else if(grade==\\\'C\\\'||grade==\\\'D\\\') score=70; 	else score=60; 语法是否正确","","0","1433316606","1433316606","1","1","","","正确","错误","","","","","129","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("58","在C语言中，下列关于条件语句的描述中，正确的是","","0","1433316878","1433316878","2","1,3","","","当if语句嵌套使用的时候，最后一个else和最近的一个没有else匹配的if匹配","一个if可以有多个else与之匹配","一个switch语句总是可以被一系列if…else语句替换","switch语句的测试表达式可以是任何类型","","","129","2"),("59","在C语言中，下列关于条件语句的描述中，正确的是","","0","1433316878","1433316878","2","1,3","","","当if语句嵌套使用的时候，最后一个else和最近的一个没有else匹配的if匹配","一个if可以有多个else与之匹配","一个switch语句总是可以被一系列if…else语句替换","switch语句的测试表达式可以是任何类型","","","129","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("60","在C语言中，下列关于条件语句的描述中，正确的是","","0","1433316878","1433316878","2","1,3","","","当if语句嵌套使用的时候，最后一个else和最近的一个没有else匹配的if匹配","一个if可以有多个else与之匹配","一个switch语句总是可以被一系列if…else语句替换","switch语句的测试表达式可以是任何类型","","","129","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("61","给定一个C程序的代码片段， 如下： 	switch (grade) { 	  	case \\\'A\\\':	score = 100; 	break;  	  	case \\\'B\\\':	score = 90;	break; 	  	case \\\'C\\\': 	  	case \\\'D\\\':	score = 60;	break; 	 	default:	score = 0;	break;  	}     把这段代码转换为if语句，","","0","1433317630","1433317630","1","3,4","","","if (grade = \\\'A\\\' ) 	  		score = 100;       	else if ( grade = \\\'B\\\' ) 	  		score = 90;       	else if ( grade = \\\'C\\\' || grade = \\\'D\\\' ) 	  		score = 60;       	else 	  		score = 0;","if ( grade == \\\'A\\\' ) 	  		score = 100;       	if ( grade == \\\'B\\\' ) 	  		score = 90;       	if ( grade == \\\'C\\\' || grade == \\\'D\\\' ) 	  		score = 60;       	else 	  		score = 0;","if ( grade == \\\'A\\\' ) 	  		score = 100;       	if ( grade == \\\'B\\\' ) 	  		score = 90;       	if ( grade == \\\'C\\\' || grade == \\\'D\\\' ) 	  		score = 60;       	else 	  		score = 0;","if ( grade == \\\'A\\\' ) 	  		score=100;       	else if ( grade == \\\'B\\\' ) 	  		score = 90;       	else if ( grade == \\\'C\\\' || grade == \\\'D\\\' ) 	  		score = 60;       	else 	  		score = 0;","","","131","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("62","在C语言中，有如下代码：     switch(x){ 	case 100: 	  printf(\\\"100\\\");break; 	case 110: 	  printf(\\\"110\\\");break;     }     下列x的定义中，可以使上段代码输出100的有（ ）","","0","1433317728","1433317728","2","1,3","","","char x = 100;","float x=100","int x =\\\'d\\\'","double x=100","","","131","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("63","给定一个C程序的代码片段， 如下： if(grade==\\\'A\\\' || grade == \\\'B\\\') score=90; else if(grade==\\\'C\\\'||grade==\\\'D\\\') score=70; 	else score=60;     把这段代码转换为switch语句，以下正确的是","","0","1433317808","1433317808","1","4","","","switch(grade){ case\\\'A\\\': case\\\'B\\\': score=90; case\\\'C\\\': case\\\'D\\\': score=70; default: score=60; }","switch(grade){ case\\\'A\\\': break; case\\\'B\\\': score=90; case\\\'C\\\': break; case\\\'D\\\': score=70; default: score=60;break; }","switch(grade){ case\\\'B\\\': score=90;break; case\\\'D\\\': score=70;break; default: score=60;break; }","switch(grade){ case\\\'A\\\': case\\\'B\\\': score=90;break; case\\\'C\\\': case\\\'D\\\': score=70;break; default: score=60;break; }","","","131","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("64","下面语句段的输出结果是( ) int i=9; switch(i) {    default: printf(\\\"default\\\");    case 0: printf(\\\"zero\\\");            break;    case 1: printf(\\\"one\\\");    case 2: printf(\\\"two\\\"); }","","0","1433318028","1433318028","2","2","","","default","default zero","error default clause not defined","error default clause not defined","","","131","1"),("65","语句while (!e);中的条件!e等价于","","0","1433485164","1433485164","2","1","","","e==0","e!=1","e!=0","~e","","","130","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("66","以下是引用片段： 　　main()  　　{ int k=5,n=0;  　　while(k>0)  　　{ switch(k)  　　{ default : break;  　　case 1 : n+=k;  　　case 2 :  　　case 3 : n+=k;  　　}  　　k--;  　　}  　　printf(\\\"%d\\\\n\\\",n);  　　} 　　","","0","1433485208","1433485208","3","4","","","0","4","6","7","","","130","1"),("67","以下程序中，以下是引用片段： 　　main()  　　{ int i=0;  　　while(i<10)  　　{ if(i<1) continue;  　　if(I==5) break;  　　i++;  　　}  　　......  　　}，while循环的循环次数是 ","","0","1433485327","1433485327","1","4","","","1","10","6","死循环","","","130","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("68","以下是引用片段： 　　main()  　　{ int i=0;  　　while(i<10)  　　{ if(i<1) continue;  　　if(i==5) break;  　　i++;  　　}  　　......  　　}输出结果是","","0","1433485435","1433485435","3","2","","","21","32","33","11","","","130","1"),("69"," t为int类型，进人下面的循环之前，t的值为0 　　while( t=l ) 　　{ …… } 　　则以下叙述中正确的是","","0","1433485491","1433485491","1","2","",""," 循环控制表达式的值为0"," 循环控制表达式的值为1","循环表达式不合法","以上都不对","","","130","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("70","以下是引用片段： 　　main()  　　{ int num= 0;  　　while(num<=2)  　　{ num++; printf(“%d\\\\\\\\n”,num);  　　} 输出结果是","","0","1433485568","1433485568","2","2","","","1 2  3  4","1  2  3","1  2","1","","","130","1"),("71","有以下程序段 　　int k=0 　　while(k=1)k++; 　　while 循环执行的次数是","","0","1433485663","1433485663","1","1","","","无限次","语法错误","一次不执行","执行一次","","","130","1"),("72","以下是引用片段： 　　main()  　　{ int n=9;  　　while(n>6) {n--;printf(“%d”,n);}  　　}","","0","1433485726","1433485726","1","2","","","987","876","8765","9876","","","130","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("73","C语言中","","0","1433486109","1433486109","1","4","","","不能使用do-while语句构成的循环 ","do-while语句构成的循环必须用break语句才能退出 ","do-while语句构成的循环，当while语句中的表达式值为非零时结束循环","do-while语句构成的循环，当while语句中的表达式值为非零时结束循环","","","128","1"),("74","C语言中while和do-while循环的主要区别是","","0","1433486242","1433486242","1","1","","","do-while的循环体至少无条件执行一次 ","while的循环控制条件比do-while的循环控制条件严格","do-while允许从外部转到循环体内"," do-while的循环体不能是复合语句 ","","","128","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("75","有以下程序段 　　int n,t=1,s=0; 　　scanf(\\\\\\\"%d\\\\\\\",&n); 　　do{ s=s+t; t=t-2; }while (t!=n); 　　为使此程序段不陷入死循环，从键盘输入的数据应该是","","0","1433486320","1433486320","2","4","","","任意正奇数","任意负偶数","任意正偶数","任意负奇数","","","128","1"),("76","以下是引用片段： 　　main ()  　　{ int s=0,a=1,n;  　　scanf(\\\"%d\\\",&n);  　　do  　　{ s+=1; a=a-2; }  　　while(a!=n);  　　printf(\\\"%d\\\\n\\\",s);  　　} 　　若要使程序的输出值为2，则应该从键盘给n输入的值是","","0","1433486441","1433486441","1","2","","","-1","-3","-5","0","","","128","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("77","以下是引用片段： 　　main()  　　{ int i=0,s=0;  　　do{  　　if(i%2){i++;continue;}  　　i++;  　　s +=i;  　　}while(i<7);  　　printf(\\\"%d\\\\n\\\",s);  　　} 　　执行后输出结果是","","0","1433486501","1433486501","2","1","","","16","12","28","21","","","128","1"),("78","有以下程序段 　　int n=0,p; 　　do{scanf(“%d”,&p);n++;}while(p!=12345 &&n<3); 　　此处do—while循环的结束条件是","","0","1433486572","1433486572","1","4","","","P的值不等于12345并且n的值小于3"," P的值等于12345并且n的值大于等于3","P的值不等于12345或者n的值小于3","P的值等于12345或者n的值大于等于3","","","128","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("79","以下是引用片段： 　　int x=3  　　do  　　{ printf(“%d”,x-=2); }  　　while (!(--x)); 　　其输出结果是","","0","1433486695","1433486695","2","3","","","1","3 0","1 -2","死循环","","","128","1"),("80","以下是引用片段： 　　main()  　　{ int x=23;  　　do  　　{ printf(“%d”,x--);}  　　while(!x);  　　} 　　该程序的执行结果是","","0","1433486823","1433486823","1","2","","","321","23","不输出","死循环","","","128","1"),("81","设变量已正确定义，则以下能正确计算f = n!的程序段是","","0","1433486962","1433486962","1","4","","","f=0 ; for(i=1;i<=n;i++) f*=i;","f=1; for(i=1;i<=n;i++) f*=i;","f=1; for(i=n;i>1;i++) f*=i; ","f=1;for(i=n;i>=2;i--) f*=i;","","","127","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("82","以下是引用片段： 　　main()  　　{  　　int a=1,b;  　　for(b=1;b<=10;b++)  　　{  　　if(a>=8) break;  　　if(a%2==1) { a+=5; continue;}  　　a-=3;  　　}  　　printf(\\\\\\\\\\\\\\\"%d\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\",b);  　　}","","0","1433487159","1433487159","2","2","","","3","4","5","6","","","127","1"),("83","若有如下程序段，其中s、a、b、c均已定义为整型变量，且a、c均已赋值(c大于0) 　　s=a; 　　for(b=1;b<=c;b++) s=s+1; 　　则与上述程序段功能等价的赋值语句是","","0","1433487192","1433487192","1","2","","","s=a+b","s=a+c","s=s+c","s=b+c","","","127","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("84","以下是引用片段： 　　main()  　　{ int k=4,n=4;  　　for( ; n  　　{ n++;  　　if(n%3!=0) continue;  　　k--; }  　　printf(\\\\\\\"%d,%d\\\\\\\\n\\\\\\\",k,n);  　　) 　　程序运行后的输出结果是","","0","1433487285","1433487285","1","3","","","1,1","2,2","3,3","4,4","","","127","1"),("85","以下是引用片段： 　　main ()  　　{ int n; float s;  　　s=1.0;  　　for(n=10;n>1;n--)  　　s=s+1/n;  　　print(\\\\\\\"%6.4f\\\\\\\\n\\\\\\\",s);  　　} 　　程序运行后输出结果错误，导致错误结果的程序行是","","0","1433487356","1433487356","2","3","","","s=1.0"," for(n=10;n>1;n--)","s=s+1/n;","printf(\\\\\\\"%6.4f/n\\\\\\\",s);","","","127","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("86","以下是引用片段： 　　main()  　　{ int i;  　　for(i=0;i<3;i++)  　　switch(i)  　　{ case 1: printf(\\\"%d\\\",i);  　　case 2: printf(\\\"%d\\\",i);  　　default: printf(\\\"%d\\\",i);  　　}  　　} 　　执行后输出结果是","","0","1433487439","1433487439","1","1","","","011122","012","012020","120","","","127","1"),("87","以下是引用片段： 　　main()  　　{ int a=0,i;  　　for(i=;i<5;i++)  　　{ switch(i)  　　{ case 0:  　　case 3:a+=2;  　　case 1:  　　case 2:a+=3;  　　default:a+=5;  　　}  　　}  　　printf(\\\\\\\"%d\\\\\\\\n\\\\\\\",a);  　　}","","0","1433487493","1433487493","1","1","","","31","13","10","20","","","127","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("88","C语言定义常量的语法正确的是","","0","1433489161","1433489161","1","1","","","#define COUNT 10","#define COUNT 10；","#define COUNT =10","#define COUNT =10；","","","125","1"),("89","struct stu{ int a;int b; }stutype 描述不正确的是","","0","1433751209","1433751209","2","3","","","struct 是结构体的关键字","struct stu 是用户定义的结构体类型","stutype是用户定义的结构体类型名","a和b都是结构体成员名","","","123","1"),("90","以下定义中不正确的是  ","","0","1433751276","1433751276","1","4","","","#define STUDENT struct student STUDENT{int num,float age} stu;","struct student{int num;float age;} stu;","struct {int num;float age;} stu;","struct {int num;float age;}student ;   struct student stu;","","","123","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("91","typedef  struct     {         char *name;         int age;     }student;     student stus[2]={{\\\"lisi\\\",23},{\\\"zhangsan\\\",25}};      student *p=stus; 输出zhangsan的是 ","","0","1433751362","1433751362","2","1","","","stus[1].name","p->name","stus.name","(*p++).name","","","123","1"),("92","当一个结构体定义时，系统分配的内存是","","0","1433751429","1433751429","1","1","","","各个成员变量所需内存的总和","结构成员中第一个成员所需的内存","成员中占内存最大的成员的内存","结构体中最后一个成员所需的内存","","","123","1"),("93","设有枚举定义语句 enum e ={a1,a2=7,a3,a4=15};则，a2和a3分别是","","0","1433751503","1433751503","1","1","","","7，8","2，3","1，2","7，2","","","123","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("94","struct sk{int a;float b;} data,*p; p=&data;  对a的正确引用是","","0","1433751540","1433751540","2","2","","","*p.data.a","(*p).a","p->data.a","p.data.a","","","123","1"),("95","枚举和结构体都是值类型","","0","1433751600","1433751600","1","1","","","正确","错误","","","","","123","1"),("96","函数内所操作的形参的值是实参的复制品，所以在函数内改变了形参的值，并不会影响实参的值","","0","1433753156","1433753156","1","1","","","正确","错误","","","","","121","3"),("97","实参可以是常数、变量、数组元素、表达式、数组","","0","1433753193","1433753193","1","1","","","正确","错误","","","","","121","3"),("98","sqrt函数求绝对值","","0","1433753210","1433753210","1","2","","","正确","错误","","","","","121","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("99","abs 函数求绝对值","","0","1433753228","1433753228","1","1","","","正确","错误","","","","","121","3"),("100","函数返回值类型最终决定于函数的形参的类型","","0","1433753252","1433753252","1","2","","","正确","错误","","","","","121","3"),("101","long  int fun(char *s) {     char *t=s;     while (*t++);          return  t-s; } 该函数的功能是","","0","1433753269","1433753269","1","2","","","比较两个字符串的大小","计算s所指向的字符串占用的字节数","计算s的长度"," 将s的字符串复制到t中","","","121","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("102","以下正确的描述是","","0","1433753352","1433753352","1","2","","","函数的定义可以嵌套，但函数的调用不可以嵌套","函数的定义不可以嵌套，但函数的调用可以嵌套","函数的定义和函数的调用均不可以嵌套","函数的定义和函数的调用均可以嵌套","","","121","1"),("104","若有说明： int a[10]；，则对a数组元素的正确引用是","","0","1433829088","1433829088","1","4","","","a[10]","a[3.5]","a(5)","a[10-10]","","","116","1"),("105","合法的数组说明语句是","","0","1433829193","1433829193","1","4","","","int a [ ]= “string ”；","int a[5]={0，1，2，3，4，5}；","char a =”string ”；","char a[ ]={0，1，2，3，4，5}；","","","116","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("106","调用 strlen(“abcd\\\\0ef\\\\0g”)的返回值为","","0","1433829319","1433829319","1","1","","","4","5","8","9","","","116","1"),("107","若有以下语句，则正确的描述是 char x[ ]=”12345”; char y[ ]={‘1’,’2’,’3’,’4’,’5’,}; ","","0","1433829396","1433829396","1","3","","","x数组和y数组的长度相同","x数组长度大于y数组长度","x数组长度小于y数组长度","x数组等价于y数组","","","116","1"),("108","以下对一维数组a定义正确的是  ","","0","1433829486","1433829486","1","3","","","char a(10) "," int a[0..100]","int a[5]","int k=10;int a[k];","","","116","1"),("109",".假设一个int 型占2个字节，int x[10]={0,2,4};则数组x所占的内存数是","","0","1433829826","1433829826","1","4","","","3","6","10","20","","","116","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("110","以下对一维数组定义不正确的是 ","","0","1433829885","1433829885","1","2","","","double x[5]={2.0,4.0,6.0,8.0,10.0};","int y[5]={0,1,3,5,7,9};","char ch1[]={‘1’,’2’,’3’,’4’,’5’};","char ch2[]={‘\\\\x10’,’\\\\xa’,’\\\\x8’};","","","116","1"),("111","以下对一维数组定义不正确的是 ","","0","1433829885","1433829885","1","2","","","double x[5]={2.0,4.0,6.0,8.0,10.0};","int y[5]={0,1,3,5,7,9};","char ch1[]={‘1’,’2’,’3’,’4’,’5’};","char ch2[]={‘\\\\x10’,’\\\\xa’,’\\\\x8’};","","","116","1"),("112","两个字符串个数相同才能比较字符串的大小","","0","1434086616","1434086616","1","2","","","正确","错误","","","","","114","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("113","字符数组以 ‘\\0’结束","","0","1434086646","1434086646","1","1","","","正确","错误","","","","","114","3"),("114","将一个字符串\"abc\"赋给字符串变量str的方法是str=\"abc\".","","0","1434086662","1434086662","1","2","","","正确","错误","","","","","114","3"),("115","函数调用可以出现在执行语句中,但不能出现在表达式中","","0","1434086686","1434086686","1","2","","","正确","错误","","","","","114","3"),("116","静态外部变量只在本文件内可用","","0","1434086709","1434086709","1","1","","","正确","错误","","","","","114","3"),("117","语言程序中必须有的函数是","","0","1434086733","1434086733","1","2","","","#include <stdio.h>","main","printf","scanf","","","114","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("118","putchar函数可以向终端输出一个","","0","1434086792","1434086792","1","4","","","整型表达式","实型表达式","字符串","字符或字符型变量的值","","","114","1"),("119","C语言中不可以嵌套的是","","0","1434086851","1434086851","1","2","","","函数调用","函数定义","循环语句","选择语句","","","114","1"),("120","若有定义：int a[3][4],则对数组a元素的正确引用是 ","","0","1434087284","1434087284","1","1","","","a[2][3]","a[1,3]","a(5)","a[10-10]","","","113","1"),("121","以下能对二维数组a进行正确初始化的语句是","","0","1434087363","1434087363","1","2","","","int a[2][]={{1,0,1},{5,2,3}} ;","int a[][3]={{1,2,3},{4,5,6}} ;","int a[2][4]={{1,2,3},{4,5},{6}} ;","int a[][3]={{1,0,1},{},{1,1}} ;","","","113","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("122","以下不能对二维数组a进行正确初始化的语句是 ","","0","1434087438","1434087438","1","3","","","int a[2][3]={0} ;","int a[][3]={{1,2},{0}} ;","int a[2][3]={{1,2},{3,4},{5,6}} ;","int a[][3]={1,2,3,4,5,6} ;","","","113","1"),("123","若有说明:int a[3][4]={0};则下面正确的叙述是","","0","1434087518","1434087518","1","4","","","只有元素a[0][0]可得到初值0","此说明语句不正确","数组a中各元素都可得到初值，但其值不一定为0","数组a中每个元素均可得到初值0","","","113","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("124","若有说明：int a[][4]={0,0}；则下面不正确的叙述是","","0","1434087600","1434087600","1","4","","","数组a的每个元素都可得到初值0","二维数组a的第一维大小为1","因为二维数组a中初值个数除以第二维大小的值的商向上取整为1，故数组a的行数为1","只有元素a[0][0]和a[0][1]可得到初值0，其余元素均得不到初值0","","","113","1"),("125","若二维数组a有m列，则计算任一元素a[i][j]在数组中位置的公式为 。（设a[0][0]位于数组的第一个位置上）","","0","1434087704","1434087704","2","4","","","i*m+j","j*m+i","i*m+j-1","i*m+j+1","","","113","1"),("126","若有说明：int a[][3]={1,2,3,4,5,6,7};则数组a第一维大小是","","0","1434087836","1434087836","1","2","","","2","3","4","无确定值","","","113","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("127","若有说明:int i, j=2,*p=&i;,则能完成i=j赋值功能的语句是","","0","1434087965","1434087965","1","2","","","i=*p;","*p=*&j;","i=&j;","i=**p；","","","111","1"),("128","若有下列定义， int a[5],*p=a;则对a数组元素地址的正确引用是","","0","1434088039","1434088039","1","3","","","*(p+5)","*p+2","(a+2)","*&a[5]","","","111","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("129","若有以下定义，int a=100,*p=&a ;则说法错误的是","","0","1434088388","1434088388","1","4","<p><span style=\"font-size:16px;font-family:宋体\">有指针变量定义可知A、C说法是正确的，故不能选。在语句中&amp;p=a，表示指针变量取得变量a地址，B说法也正确，也不能选择。D中不能说变量p的值为100，应该*p的值为100，所以选择D。 </span><br /></p>","","声明变量p，其中*表示p是一个指针变量","变量p经初始化，获得变量a的地址 ","变量p只可以指向一个整型变量 ","变量p的值为100","","","111","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("130","若有以下定义， int a ,b , *p; float c, *q; 则赋值正确的是(  )。","","0","1434088604","1434088604","1","3","<p><span style=\"font-family:宋体\">指针变量使用规定，不同类型的指针变量不能赋值，也不能取得普通变量地址，故A、B不正确，不能选择。因为q是float类型指针变量，不能申请int 类型地址，D不正确，也不能选择。因为任何类型的指针变量都能取得NULL指针，所以C正确。 &nbsp; </span></p><p><br /></p>","","p=&c","q=p","p=NULL","q=new int","","","111","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("131","如果x是整型变量，则合法的形式是","","0","1434088820","1434088820","1","4","<p><span style=\"font-size:16px;font-family:宋体\">因为C++语言表达式没有地址，A不正确。C++语言普通变量不能用*运算，因此B和C也不正确。&amp;x表示变量x的地址，*&amp;x是x 地址的值，所以D正确</span><br /></p>","","＆(x+5)  ","*x","&*x","*&x","","","111","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("132","若有语句int a[10]={0,1,2,3,4,5,6,7,8,9},*p=a；则(      )不是对a数组元素的正确引用（其中0≤i<10）","","0","1434088886","1434088886","2","2","<p><span style=\"font-family:宋体\">指针就变量p取得数组a的首地址，由指针与数组关系知，p[i]表示数组元素第i+1</span></p><p><span style=\"font-family:宋体\">元素值，p[i]=a[i]正确，故A不能选。*(a+i)表示一维数组a第i+1元素值，*(*(a+i)表示对第i+1元素值再取值是错误操作，所以选B。a[p-a]=a[0]正确，故不能选择C。*(&amp;a[i])也正确(见上题)，也不能选D</span></p><p><br /></p>","","p[i]","*(*(a+i))","a[p-a]       ","*(&a[i]) ","","","111","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("133","变量的指针，其含义是指该变量的 ","","0","1434089096","1434089096","1","2","","","值","地址","名","标识","","","111","1"),("134","已有定义int k=2;int *ptr1,*ptr2;且ptr1和ptr2均已指向变量k，下面不能正确执行的赋值语句是","","0","1434089371","1434089371","1","2","","","k=*ptr1+*ptr2 ","ptr2=k","ptr1=ptr2          ","k=*ptr1*(*ptr2) ","","","111","1"),("135","#define  PI  3.14  #define  R  5.0  #define  S  PI*R*R  main()   { printf(\"% f\",S);} ","","0","1434092202","1434092202","1","2","","","3.14","78.500000","5.0","无结果","","","109","1"),("136","以下程序的输出结果是    #define  MAX(x,y)  (x)>(y)?(x):(y) main() {  int a=5,b=2,c=3,d=3,t; t=MAX(a+b,c+d); printf(“%d\\n”,t); }","","0","1434092301","1434092301","1","3","","","70","60","7","6","","","109","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("137","宏定义不是C 语句，不必在行末加分号；","","0","1434092359","1434092359","1","1","","","正确","错误","","","","","109","3"),("138","C语言预编译命令#include<myfile.h>和#include”myfile.h”的功能是完全一样的；","","0","1434092378","1434092378","1","2","","","正确","错误","","","","","109","1"),("139","编译预处理就是在C语言中可以使用的几种特殊命令","","0","1434092396","1434092396","1","1,2,3","","","#include ","#define ","#undef","#elseif","","","109","2"),("140","设有下列两条宏定义命令，则表达式“B／B”的值为    (    )    # define A  3＋2    # define B  A * A ","","0","1434092456","1434092456","1","1","","","1","5","25","17","","","109","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("141","在“文件包含”预处理语句的使用形式中，当#inlcude后面的文件名用〝 〞（双引号）括起时，寻找被包含文件的方式是  ","","0","1434092491","1434092491","1","2","","","直接按系统设定的标准方式搜索目录 ","先在源程序所在目录搜索，再按系统设定的标准方式搜索。","仅仅搜索源程序所在目录","仅仅搜索当前目录 ","","","109","1"),("142","C程序的基本单位是","","0","1434092994","1434092994","1","1","","","函数","过程","语句","子程序","","","106","1"),("143","C语言规定，一个程序中的mian函数在什么位置","","0","1434093032","1434093032","1","3","","","必须在最开始","必须在系统调用的库函数后面","任意位置","必须在最后","","","106","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("144","JAVA源程序的文件名要求和类名要相同。","","0","1434093733","1434093733","1","1","","","正确","错误","","","","","139","3"),("145","java程序严格区分大小写","","0","1434093753","1434093753","1","1","","","正确","错误","","","","","139","3"),("146","main方法是java程序的入口","","0","1434093781","1434093781","1","1","","","正确","错误","","","","","139","3"),("147","变量的三要素是","","0","1434093803","1434093803","1","1,2,3","","","初始化","类型","名称","使用","","","139","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("148","java编程规范有哪些","","0","1434093849","1434093849","1","1,2,3,4","","","类名必须使用public修饰","一行只能写一条语句","用{}括起来的部分通常表示程序的某一层次结构。“{”一般放在这一结构开始行的最末，“}”与该结构的第一个字母对齐，并单独占一行","低一层次的语句或注释应该比高一层次的语句或注释缩进若干格后书写，使程序更加清晰，增加程序的可读性。","","","139","2"),("149","java中包括自动类型转换和强制类型转换两种。","","0","1434094005","1434094005","1","1","","","正确","错误","","","","","139","3"),("150","‘ \\n’的作用是","","0","1434094099","1434094099","1","1","","","换行","水平制表位","输出n","空格","","","139","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("151","在java 5/3 的结果是","","0","1434094236","1434094236","1","1","","","1","-1","2","1.67","","","140","1"),("152","在java语言中，下列运算符的优选级最高的是（）","","0","1434094918","1434094918","1","4","","","&&",">","+","%","","","140","1"),("153","int a=3,b=2,c=1;     int x=10,y=20;     if(a<b)  if(b!=0)     if(!x)          y=1;    else if(x)         y=0;    y=-1;请问y的值是","","0","1434095037","1434095037","1","1","","","20","1","0","-1","","","140","1"),("154","在java语言中，下列代码的输出结果是（   ）。   int a=10,b=13,max=0;  max=a>b?a++:-b;  System.out.printf (max);","","0","1434095130","1434095130","1","4","","","10","11","12","-13","","","140","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("155","下列java语言代码的运行结果是（   ）。  int a=2,b=-1,c=2;  if(a<b)   if(b<0)    c=0;  else      c++;            System.out.printf (c); A. 0 B. 1 C. 2 D.  3  25. 在java语言中,下列代码的运行结果是(   )  int a=10,b=6;  if(a==b)   ","","0","1434095196","1434095196","1","3","","","0","1","2","3","","","140","1"),("156","在java语言中,下列代码的运行结果是(   )  int a=10,b=6;  if(a==b)   System.out.printf (++a);  else     System.out.printf (b--);","","0","1434095327","1434095327","1","4","","","10","11","5","6","","","140","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("157","在java语言中,下面程序的输出结果是(   ) fun(int a,int b,int c){  a=a*b;  c=6;  }   public static void main(String ages[]){  int c=0;  fun(2,3,c);  System.out.printf(c); ","","0","1434095490","1434095490","1","1","","","0","1","6","无法确定","","","140","1"),("158","分析下面的java语言程序,如果从键盘上输入9,则输出结果是(   )   int n;  Scanner s=new Scanner(System.in); n=s.nextInt(); if (n<10)    System.out.printf (n++); else  System.out.printf (n--); ","","0","1434095589","1434095589","1","3","","","11","10","9","8","","","140","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("159","在java语言中，下列代码的运行结果是（  ）  int stuAge[]=new int[]{18,22,26};   int i,avgAge=0;    for (i=1;i<stuAge.length;i++){     avgAge+=stuAge[i]/5;     } System.out.print(avgAge); ","","0","1434095912","1434095912","1","2","","","0","9","11","12","","","141","1"),("160","在java语言中，下列代码的输出结果是（  ）。  int i,j=0;    for (i=1;i<10;i++) { if  (i%4==0){   continue;  }  j+=i;  }  System.out.print(i+”,”+j); ","","0","1434096014","1434096014","1","1","","","10，33","3，6","10，12","4，10","","","141","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("161","下列java语言代码的输出结果是（  ）   int i;  for (i=0;i<3;i++){  switch(i){   case 1: System.out.printf (i);   case 2: System.out.printf(i);   default: System.out.printf (i); } ","","0","1434096124","1434096124","1","1","","","011122","012","012020","120","","","141","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("162","以下哪个选项是正确的HTML文档的结构()","","0","1434096165","1434096165","1","1","<p> &nbsp; <title>........</title> &nbsp; &nbsp; </p><p><br /></p>","","A.&lt; html&gt; &lt; head&gt;  &lt; title&gt;........&lt;/title&gt; &lt; /head&gt;   &lt; body&gt;.....&lt;/body&gt;   &lt; /html&gt;"," &lt; head&gt;    &lt; html&gt;    &lt; title&gt;........&lt; /title&gt;    &lt; /html&gt;    &lt; body&gt;    &lt; /body&gt;    &lt; /head&gt;","&lt; body&gt;   &lt; html&gt;   &lt; title&gt;........&lt; /title&gt;   &lt; /html&gt;   &lt; head&gt;   &lt; /head&gt;   &lt; /body&gt;","&lt; html&gt;   &lt; head&gt;    &lt; body&gt;   &lt; /body&gt;    &lt; /head&gt;    &lt; title&gt; .........&lt; /title&gt;   &lt; /html&gt;","","","60","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("317","Session：一个人在网站上一次活动的过程；","","0","1434100204","1434100204","1","1","","","正确","错误","","","","","137","3"),("318","Impressions：广告被完全下载的次数；","","0","1434100216","1434100216","1","1","","","正确","错误","","","","","137","3"),("163","在标题标签中一共分为几级()","","2","1434096434","1434096434","1","3","","","四级 ","五级","六级 ","七级","","","60","1"),("248","java中数组没有下标越界检查机制","","0","1434099205","1434099205","1","2","","","正确","错误","","","","","142","3"),("249","受众短期行为定向，是网盟的四大定向之一。","","0","1434099236","1434099236","1","1","","","正确","错误","","","","","192","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("164","在java语言中,下列代码的运行结果是（  ） int getCallNum()  { static int num=0;  num++;  return num; }  public static void main(String age[]){  int i=0;  for (i=0;i<5;i++){   int j=getCallNum();   if (j>2){      break; }           System.out","","0","1434096200","1434096200","1","4","","","01","012","0123","01234","","","141","1"),("165","以下选项属于段落标签的是()","","0","1434096635","1434096635","1","2","","","&lt;h1&gt;......&lt;/h1&gt;  ","&lt;p&gt;.........&lt;/p&gt; "," &lt;hr&gt;.......&lt;/hr&gt;","&lt;ol&gt;.......&lt;/ol&gt;","","","60","1"),("260","对同一个广告来说，咨询量会小于点击量。","","0","1434099376","1434099376","1","1","","","正确","错误","","","","","191","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("261","常用的在本地搭建PHP环境的安装包包括哪些？","","3","1434099347","1434099347","2","1,2,3","","","XAMPP套件  ","WAMP5套件 ","DedeAMPZ套件","","","","53","2"),("166","核心关键词分为以下哪几类","","0","1434096813","1434096813","1","1,2,3,4","","","产品关键词","服务关键词","公司品牌","行业通用关键词","","","75","2"),("167","关于设置核心关键词必要性说法正确的是","","0","1434096996","1434096996","1","2,3,4","","","绝对会给企业带来较高的ROI","有助于企业网站的推广","对制定有效的优化策略有重要的价值","很大程度上决定了SEO方向","","","75","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("168","下面程序运行结构是 int i=0,j=10; 	for (i=0;i<j;i++,j--){  j++; if (i==10){   	  	System.out.printf(i+\",\"+j);  	}  	}  	System.out.printf (i+\",\"+j);","","0","1434097060","1434097060","1","1","","","10，10","10， 10    10，10","10，11","10，11 10，10","","","141","1"),("169","以下选择项属于空格符的是()","","0","1434096897","1434096897","1","1","","","&lt;＆ｎｂｓｐ&gt; ","&lt;＆ｇｔ&gt; ","&lt;＆ｌｔ&gt; ","&lt;＆ｑｏｕｔ&gt;","","","60","1"),("266","安装DEDE CMS 的步骤有","","4","1434099414","1434099414","1","1,2,3","","","程序下载　","安装运行环境","　安装dedecms ","前后台简介","","","53","2"),("267","百度网盟和百度搜索推广可以联合起来宣传。","","0","1434099475","1434099475","1","1","","","正确","错误","","","","","193","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("268","百度网盟是在百度以外的网站中投放广告。","","0","1434099489","1434099489","1","1","","","正确","错误","","","","","193","3"),("170","核心关键词怎样选取","","0","1434097062","1434097062","1","1,3,4","","","选择和自己网站主题相关的","只要这个关键词质量度高就可以选取它","选择竞争不太激烈的关键词","参考竞争对手的关键词","","","75","2"),("171","中小网站或个人网站挑选关键词时应该选取搜索量相对较少、竞争指数相对较大的关键词","","0","1434097152","1434097152","1","2","","","正确","错误","","","","","75","3"),("172","java中常用的循环有三种  while，do while ，for ","","0","1434097180","1434097180","1","1","","","正确","错误","","","","","141","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("173","下列关于404页面说法正确的是","","0","1434097163","1434097163","1","4","","","404页面是当前用户输入一个正确的链接时出现的错误页面"," 404页面是当用户点击一个存在的网页时出现的错误页面","404页面是让用户关闭窗口离开网站的提示页面","404页面是为了告诉浏览者请求的页面不存在或者连接错误","","","82","1"),("174","有资源有实力网站，核心关键词可以是搜索次数最多的词","","0","1434097220","1434097220","1","1","","","正确","错误","","","","","75","3"),("175","do。。。while 循环至少执行一次","","0","1434097220","1434097220","1","1","","","正确","错误","","","","","141","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("176","查询关键词搜索量的工具可以用站长工具","","0","1434097243","1434097243","1","1","","","正确","错误","","","","","75","3"),("177","当两个关键词有包含关系时。要选择被包含的关键词","","0","1434097268","1434097268","1","2","","","正确","错误","","","","","75","3"),("178"," 最佳的网站内部结构是需要用户进行( )点击能达到网站的任何页面","","0","1434097240","1434097240","1","1","","","3次","4次","5次","6次","","","82","1"),("179","HTML里用于标记正文内容的是哪个标签( )","","0","1434097149","1434097149","1","1","","","&lt;boby&gt;......&lt;/body&gt; ","&lt;html&gt;......&lt;/html&gt;","&lt;head&gt;......&lt;/head&gt;","&lt;br&gt;........&lt;/br&gt;","","","60","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("274","如果希望部分标签采用共同样式，应采用那种选择器","","0","1434099632","1434099632","1","1","","","class","id","div"," li","","","63","1"),("180","在java语言中，在int num[5]={10,20,30,40,50}中，num[3]的值是()。","","0","1434097319","1434097319","1","3","","","20","50","40","10","","","142","1"),("181","选择长尾关键词的基本条件有哪些","","0","1434096678","1434096678","1","1,2,3","","","与网站内容相关","用户有可能来查询","有一定搜索频率且满足用户要求","","","","77","2"),("182","关键词密度的标准范围是？","","1","1434097276","1434097276","1","3","<p>百度规定，记住就行</p>","","2%-10%","4%-8%","2%-8%","3%-12%","","","80","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("183","某java程序段中，若有说明：int a[10];则对a数组元素的正确引用是","","0","1434097348","1434097348","1","2,4","","","a[10]","a[3+1]","a(5)","a[0]","","","142","2"),("184","下列属于网站内部链接的是","","0","1434097330","1434097330","1","1,2,3","","","网站的各种导航","网站内容页的上一篇和下一篇","网站的面包屑导航","网站内容页面里指向其他网站的锚文本","","","82","2"),("185","如何定义样式使一个网页内所有的   标签添加背景颜色?( )","","4","1434097333","1434097333","1","2","","",".all h1 {background-color:#FFFFFF}","h1 {background-color:#FFFFFF}",".allh1 {background-color:#FFFFFF}",".alth1 {background-color:#FFFFFF}","","","60","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("186","以下哪些是选择长尾关键词的参考标准","","0","1434097363","1434097363","1","1,2,3,4","","","百度下拉列表","百度相关搜索","竞争对手的关键词","在线网站挖掘：爱站等","","","77","2"),("187","关键词密度的作用？","","2","1434097411","1434097411","1","1,2,3","","","提升关键词排名","避免搜索引擎处罚","增强用户体验","计算关键词数","","","80","2"),("188","robots.txt文件放的位置哪个是正确的","","0","1434097420","1434097420","1","1","","","http://www.123.com/robots.txt"," http://www.123.com/bbs/robots.txt"," http://www.123.com/robots/rotots.txt","","","","82","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("189","优化关键词密度的方法？","","3","1434097529","1434097529","1","1,2,3,4","","","设置title内关键词","在页面中部添加关键词","在页面尾部添加关键词","调整keywords","","","80","2"),("190","用户常用的搜索方式如：某某产品怎么样，的拓词思路是","","0","1434097488","1434097488","1","1","","","产品服务+搜索意图","产品服务+企业信息 ","产品服务+质量","","","","77","1"),("191","关键词的密度是不是越高越好？","","4","1434097579","1434097579","1","2","","","是","不是","","","","","80","3"),("192","description里是不是可以重复添加关键词以提高关键词密度？","","5","1434097611","1434097611","1","2","","","是","不是","","","","","80","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("193","为了效率最大化，调整好关键词密度到合理范围后，可以不再去更改？","","6","1434097642","1434097642","1","2","","","是","不是","","","","","80","3"),("194","借助查询工具，查询关键词密度，只能查到首页？","","7","1434097667","1434097667","1","2","","","是","不是","","","","","80","3"),("195","核心关键词“新疆特产干果”的长尾关键词可以有","","0","1434097589","1434097589","1","1,3,4","","","新疆特产干果批发","新疆特产水果","新疆特产干果的价格","新疆特产干果纸皮核桃","","","77","2"),("196","如果核心词关注度少，不如选择合适的长尾关键词","","0","1434097739","1434097739","1","1","","","正确","错误","","","","","77","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("197","选择长尾关键词的时候可以不考虑百度指数，指数越高说明该词越热，越有市场。","","0","1434097771","1434097771","1","2","","","正确","错误","","","","","77","3"),("198","“新疆特产干果多少钱”的拓展思路是“产品服务+价格费用”","","0","1434097791","1434097791","1","1","","","正确","错误","","","","","77","3"),("199","域名的优化包括哪些","","0","1434097761","1434097761","1","1,2,3,4","","","二级域名的使用","路径要包含关键词","连词符的使用","URL重写","","","82","2"),("200","关键词应当进行怎样的布局","","0","1434097839","1434097839","1","3","","","m型","b型","a型","f型","","","79","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("201","关于robots.txt，下列说法正确的是","","0","1434097829","1434097829","1","4","","","如果网站设置了robots.txt文件就可以提升网站的流量","在robots.txt文件中设置所有的文件都可以被搜索引擎蜘蛛抓取，这样可以增加网站的收录率","搜索引擎蜘蛛抓取网页太浪费服务器资源，就要在robots.txt文件中设置所有的搜索引擎蜘蛛都不能抓取全部的网站","搜索蜘蛛访问一个站点时，会首先检查该网站根目录下是否存在robots.txt文件","","","82","1"),("202","目标关键词放在哪里效果最佳","","0","1434097918","1434097918","1","2","","","关键词标签","标题标签","描述标签","","","","79","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("203","关于301重定向，下列说法正确的","","0","1434097928","1434097928","1","1,3","","","它表示本网页永久性转移到另一个地址","它是暂时的重定向","301重定向可以帮助网站网址规范化","","","","82","2"),("204","关于keywords标签，下列说法错误的是","","0","1434097969","1434097969","1","1","","","尽量重复使用关键词","每个网页的关键词应该不一样","一个网页的关键词标签里最多包含3-5个最重要的关键词","标签中的内容要与网页核心内容相关","","","79","1"),("406","在swift语言中，下面定义常量和变量正确的是: ","","0","1434101598","1434101598","1","2,3","","","int age = 5;","let age = 5","var age = 10;","int age;","","","14","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("284","匹配方式：即设置网民搜索词与账户关键词之间的对应关系的一种方式；","","0","1434099858","1434099858","1","1","","","正确","错误","","","","","157","3"),("285","匹配方式有广泛匹配、精确匹配、短语匹配三种；","","0","1434099878","1434099878","1","1","","","正确","错误","","","","","157","3"),("286","当网民搜索词与帐户关键词完全一致时，帐户中关键词会和配套创意一起展现在对应网民的搜索结果中；","","0","1434099891","1434099891","1","1","","","正确","错误","","","","","157","3"),("287","短语匹配提供了三种匹配选择，分别是：短语-核心包含、短语-同义包含和短语-精确包含；","","0","1434099907","1434099907","1","1","","","正确","错误","","","","","157","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("288","下列哪一个不是盒子属性的内容","","0","1434099853","1434099853","1","4","","","padding","border","margin","decimal","","","63","1"),("289","[网络营销] 是精确匹配；","","0","1434099919","1434099919","1","1","","","正确","错误","","","","","157","3"),("290","“[网络营销]”是精确包含匹配；","","0","1434099935","1434099935","1","1","","","正确","错误","","","","","157","3"),("206","关于关键词密度，下列说法错误的是","","0","1434098017","1434098017","1","2,3","","","合理的关键词密度可以帮助提升关键词排名"," 密度过小容易遭到搜索引擎惩罚","一般来说控制在2%-10%","关键词密度查询工具http://www.chinaz.com","","","79","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("207","Javascript对SEO的影响有","","0","1434098096","1434098096","1","1,3","","","干扰搜索引擎分析网页内容","降低关键词密度"," 严重妨碍搜索引擎抓取网页","降低用户体验度","","","79","2"),("208","在Java中，下面（  ）正确创建包含5个\"\"字符串的数组","","0","1434097413","1434097413","1","1,3","","","String a2[]=new String [5]; 	for(int i=0;i<5;i++) 	{ 		a2[i]=\"\"; 	}","String a[] = new String[5];  	 	a={\"\",\"\",\"\",\"\",\"\"};","String []a={\"\",\"\",\"\",\"\",\"\"};","String a[]=new String[5]{\"\",\"\",\"\",\"\",\"\"};","","","142","2"),("209","基本数据类型不包括","","0","1434098064","1434098064","1","1","<p>OC基本数据类型有：int,float,double,char</p>","","int","float","NSArray","char","","","33","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("210","最佳的网站内部结构是需要用户进行(a)点击能达到网站的任何页面","","0","1434098153","1434098153","1","1","","","3次","4次","5次","6次","","","79","1"),("211","Seo网站诊断主要包括哪些方面？","","0","1434098128","1434098128","1","1,2,3,4","","","域名和服务器诊断、网站内容的诊断","网站标题和描述诊断、网站友情链接的诊断","网站程序代码的诊断","URL层级与页面链接的诊断","","","89","2"),("212","中小企业网站适合全站放置友情链接","","0","1434098203","1434098203","1","2","","","正确","错误","","","","","79","3"),("213","url层级诊断中，层级越短越好，建议不要超过（）级深度？","","0","1434098221","1434098221","1","3","","","1","2","3","4","","","89","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("214","数据类型限定词不包括","","0","1434098174","1434098174","1","3","<p>OC数据类型的限定词有：short,long,long long,unsigned</p>","","short","long","short short","long long","","","33","1"),("215","友情链接诊断时应考虑哪些方面？","","0","1434098256","1434098256","1","1,2,3,4","","","排除作弊友情链接","排除不想管且权重低的友情链接","排除被搜索引擎处罚的友情链接","数量尽量控制在50以内","","","89","2"),("216","下列<h>标签中哪些标签能够很好的突出显示页面标题","","0","1434096209","1434096209","1","1","","","&lt;h1&gt;,&lt;h2&gt;","&lt;h3&gt;","&lt;h4&gt;,&lt;h5&gt;","&lt;h6&gt;","","","84","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("217","seo诊断的作用","","0","1434098325","1434098325","1","1,2,3,4","","","提高新站收录的速度","增加网站的收录量","提升关键词排名","解决网站被处罚的问题","","","89","2"),("218","在网站中，模板可以大致分为以下几种","","0","1434096248","1434096248","1","1,2,3","","","首页模板","列表模板","内容模板","","","","64","2"),("219","诊断域名是否被处罚，用到下面哪个判断？","","0","1434098375","1434098375","1","2","","","domain:www.baidu.com ","site:www.baidu.com","inurl:www.baidu.com","intitle:www.baidu.com","","","89","1"),("220","对象类型都包括","","0","1434098323","1434098323","1","1,2,5","<p>OC中对象类型一般都有NS/UI为前缀</p>","","NSString","NSNumber","float","char","NSArray","double","33","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("221","网站标题的文字应该控制在","","0","1434098417","1434098417","1","3","","","50字以内  "," 50字以外","40字以内 ","40字以外","","","89","1"),("222","网站关键词密度的范围应在","","0","1434098468","1434098468","1","2","","","3%--9%之间","2%--8%之间","4%--10%之间 ","5%--10%之间","","","89","1"),("223","模板标签可分类为","","0","1434098509","1434098509","1","1,2,3,4","<p>视频中有分类</p>","","全局标签 ","列表标签","内容标签","其他标签","","","64","2"),("224","id类型可以是任意类型","","0","1434098484","1434098484","1","2","<p>id类型是任意对象类型，不能是基本数据类型<br /></p>","","True","Flase","","","","","33","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("225","标识符的命名规则","","0","1434098612","1434098612","1","","<p>1，标识符由字母，数字，下划线组成。</p><p>2，标识符的第一个字符必须是字母或下划线，不能是数字。</p><p>3，区分大小写。</p>","","正确","错误","","","","","33","0"),("226","如下程序int[]a={1,2,3,4,5}; 	  	  for (int i = 0; i < a.length; i++) { 		System.out.println(a[i++]); 	}结果是","","0","1434098625","1434098625","1","3","","","出现异常","12345","135","24","","","142","1"),("227","BOOL变量使用范围","","0","1434098642","1434098642","1","","<p>1，一般的情况下在if条件语句中使用。</p><p> 2，判断或者是保存两种状态的时候使用。</p>","","正确","错误","","","","","33","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("228","下列那个标签有加粗表示加强语气的意思","","0","1434098364","1434098364","1","2","","","&lt;h&gt;","&lt;strong&gt;","&lt;a&gt;","&lt;img&gt;","","","84","1"),("316","更换模板的步骤包括哪些?","","4","1434100152","1434100152","2","1,2,3","","","在官网或其它地方下载模板文件并解压（注意模版版本和DedeCMS版本要相同）","找到已安装的dede程序下，找到htdocs文件，备份文件夹templets","打开第一步下载解压后的新模版文件夹，copy这个文件夹下所有文件到第二步htdocs\\templets下","","","","56","2"),("293","在外部样式表中，分别定义*.css 和*.html, 样式和内容不分离，所以在网页中经常使用","","0","1434099983","1434099983","1","2","","","正确","错误","","","","","63","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("229","在dedecms模板后台，调用的一级栏目的标签为","","0","1434098565","1434098565","1","1","<p>调用栏目为：“dede：channel” ，一级栏目为：“top”<br /></p>","","{dede：channel .. type=“top”....} ","{dede：channel .. type=“son”....}","{dede：channelartlist .. type=“top”....} ","{dede：channelartlist.. type=“son”....}","","","64","1"),("230","在dedecms模板后台，调用的二级栏目的标签为","","0","1434098733","1434098733","1","2","<p>调用栏目为：“dede：channel” ，二级栏目为：“son”<br /></p>","","{dede：channel .. type=“top”....}","{dede：channel .. type=“son”....}","{dede：channelartlist .. type=“top”....}","{dede：channelartlist.. type=“son”....}","","","64","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("231","在dedecms模板后台，调用多个栏目的模板标签为","","0","1434098796","1434098796","1","2","","","{dede：channel .. flag=“h”....} ","{dede：channelartlist .. typeid=“1,2”....}","{dede：artlist .. flag=“h”....} ","{dede：pagelist .. type=“。。”....}","","","64","1"),("232","在dedecms模板后台，调用文章内容的模板标签为","","0","1434098839","1434098839","1","1","<p>文章内容--“artlist”<br /></p>","","{dede：artlist .. flag=“h”....} ","{dede：pagelist .. type=“。。”....}","{dede：channel .. flag=“h”....} ","{dede：channelartlist .. typeid=“1,2”....}","","","64","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("233","OC中数据类型分为几种类型","","0","1434098883","1434098883","1","","<p>OC中数据类型分为，基本数据类型，对象类型和，id类型<br /></p>","","正确","错误","","","","","33","0"),("235","关于HTML基本标签,下列说法错误的是","","0","1434098747","1434098747","1","3,4","","","h1,h2对于SEO来说一个页面中尽量少用，使用1-2次 ","strong 可以使用多次、但要合理使用","<a>标签中的title属性属于必须属性（必须添加）","<img>标签中的alt属性属于非必须属性（可以不必添加）","","","84","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("236","假如，在网站的一个产品列表中，我想在列表中看到产品的图片，需要调用的模板标签为","","0","1434098895","1434098895","1","4","<p>图片--image<br /></p>","","{dede：artlist .. flag=“h”....}","{dede：pagelist .. typeid=“1,2,3”....}","{dede：channel .. flag=“h”....} ","{dede：artlist...type=image....}","","","64","1"),("237","以下程序运行结果是 int []numbers=new int[]{2,1,3}; 	 	 Arrays.sort(numbers); 	 System.out.println(Arrays.binarySearch(numbers,2));","","0","1434098963","1434098963","1","2","","","0","1","2","3","","","142","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("238","Javascript对SEO的影响有哪些","","0","1434098972","1434098972","1","1,3","","","干扰搜索引擎分析网页内容","降低关键词密度","严重妨碍搜索引擎抓取网页","降低用户体验度","","","84","2"),("239","网盟推广账户中最多有100个计划.","","0","1434099068","1434099068","1","1","","","正确","错误","","","","","192","3"),("240","网盟推广账户中，一个计划最多有1000个推广组。","","0","1434099117","1434099117","1","1","","","正确","错误","","","","","192","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("241","声明数组的方式","","0","1434099017","1434099017","1","1,2,3","","","数据类型  标识符 [ ]；","数据类型      标识符  [ ] = new   数据类型  [  大小  ]  ；","数据类型      标识符   [ ] = {  值   1  ，值   2  ，„值   N}   ；","数据类型      标识符  [ ] = new   数据类型  [  ]  ；","","","142","2"),("242","网盟推广账户中，一个推广组中最多有100条创意。","","0","1434099142","1434099142","1","1","","","正确","错误","","","","","192","3"),("243","可以直接在网页外调用的标签代码有哪些","","0","1434099079","1434099079","1","3,4","","","&lt;iframe&gt;","&lt;img&gt;","js代码","css代码","","","84","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("244","网盟推广账户中，推广组中必须有关键词。","","0","1434099161","1434099161","1","2","","","正确","错误","","","","","192","3"),("247","受众长期兴趣定向，是网盟的四大定向之一。","","0","1434099216","1434099216","1","1","","","正确","错误","","","","","192","3"),("245","java中数组的下标从0开始","","0","1434099157","1434099157","1","1","","","正确","错误","","","","","142","3"),("246","受众自然属性定向，是网盟的四大定向之一。","","0","1434099202","1434099202","1","1","","","正确","错误","","","","","192","3"),("250","下面哪种方式可以进入织梦后台","","1","1434098982","1434098982","1","3,4","","","http://localhost","http://127.0.0.1","http://localhost/dede","http://127.0.0.1/dede","","","53","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("251","下列选项中可以用来调整关键词密度的标签有哪些","","0","1434099170","1434099170","1","3,4","","","&lt;h&gt;","&lt;strong&gt;","&lt;a&gt;","&lt;img&gt;","","","84","2"),("252","消费限额，可以在账户、计划两个层级设置。","","0","1434099272","1434099272","1","1","","","正确","错误","","","","","191","3"),("253","投放地域可以在账户、计划两个层级设置。","","0","1434099318","1434099318","1","1","","","正确","错误","","","","","191","3"),("254","出价，可以针对推广单元和关键词进行设置。","","0","1434099332","1434099332","1","1","","","正确","错误","","","","","191","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("255","主流的快速建站工具包括哪些？","","2","1434099268","1434099268","2","1,2,3","","","搭建论坛社区和资讯网站的：Discuz和Phpwind  ","搭建个人博客的：WordPress ","搭建企业网站或门户网站：DedeCMS","","","","53","2"),("256","下列选项中关键词密度多少为最佳","","0","1434099278","1434099278","1","4","","","1%-5%","5%-10%","10%-20% ","2%-8%","","","84","1"),("257","否定关键词，可以在推广计划、推广单元层级进行设置。","","0","1434099343","1434099343","1","1","","","正确","错误","","","","","191","3"),("258","访问URL可以在关键词、创意中设置。","","0","1434099354","1434099354","1","1","","","正确","错误","","","","","191","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("259","对同一个广告来说，展现量会大于点击量。","","0","1434099365","1434099365","1","1","","","正确","错误","","","","","191","3"),("343","关键词可以分为产品词、通用词、人群词、长尾词；","","0","1434100554","1434100554","1","1","","","正确","错误","","","","","134","3"),("262","百度联盟、百度网盟都是百度的产品。","","0","1434099428","1434099428","1","1","","","正确","错误","","","","","193","3"),("263","广告主投广告是在百度网盟上。","","0","1434099439","1434099439","1","1","","","正确","错误","","","","","193","3"),("264","小站长投广告是在百度联盟上。","","0","1434099450","1434099450","1","1","","","正确","错误","","","","","193","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("265","百度联盟是指投放广告的网站的联盟。","","0","1434099463","1434099463","1","1","","","正确","错误","","","","","193","3"),("269","百度网盟相对百度搜索推广，更具有主动性。","","0","1434099502","1434099502","1","1","","","正确","错误","","","","","193","3"),("270","DEDE CMS 是基于PHP+My SQL 语言开发的。","","5","1434099484","1434099484","1","1","","","正确","错误","","","","","53","3"),("271","安装Wamp环境时要检查是否有占用80端口的软件。","","6","1434099553","1434099553","3","1","","","正确","错误","","","","","53","3"),("272","安装Wamp环境时检查是否之前装有SQL Server等数据库，如果有设置为禁用。","","7","1434099581","1434099581","2","1","","","正确","错误","","","","","53","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("273","选择器分为哪几种","","0","1434099504","1434099504","1","1,2","","","id ","class","div","li","","","63","2"),("275","综合排名指数(CRI) = 关键词出价 * 质量度；","","0","1434099704","1434099704","1","1","","","正确","错误","","","","","190","3"),("276","关键词的综合排名指数越高，排名越靠前；","","0","1434099728","1434099728","1","1","","","正确","错误","","","","","190","3"),("277","关键词出价：广告主愿意支付的最高费用；","","0","1434099743","1434099743","1","1","","","正确","错误","","","","","190","3"),("278","关键词出价是关键词的实际点击价格；","","0","1434099760","1434099760","1","2","","","正确","错误","","","","","190","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("279","提高出价后一定提升排名；","","0","1434099772","1434099772","1","2","","","正确","错误","","","","","190","3"),("280","提升排名一定要提高出价；","","0","1434099784","1434099784","1","2","","","正确","错误","","","","","190","0"),("281"," 如果希望控制某个div块，并要求样式唯一，应采用那种选择器","","0","1434099704","1434099704","1","2","","","class"," id "," div ","li","","","63","1"),("282","百度凤巢系统正常反应时间10秒左右；","","0","1434099795","1434099795","1","1","","","正确","错误","","","","","190","3"),("283","list-style规定的列表风格有哪些","","0","1434099799","1434099799","1","1,2,3,4","",""," none"," circle","decimal","disc","","","63","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("291","“{网络营销}”是核心包含匹配；","","0","1434099946","1434099946","1","1","","","正确","错误","","","","","157","3"),("305","账户失效关键词数量是影响质量度的重要因素；","","0","1434100118","1434100118","1","1","","","正确","错误","","","","","138","3"),("292","样式的优先级是如何定义的","","0","1434099920","1434099920","1","3","","","由低到高， 由大到小","由大到小， 由远到近","由低到高， 近者优先","由高到低，近者优先","","","63","1"),("294","DEDE备份模板文件夹是下列哪个？","","1","1434099916","1434099916","1","2","","","www","templets","templet","default","","","56","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("295","如果一家甘肃搬家公司要注册网址，站在SEO角度来说，下面的哪个比较合适？","","1","1434096593","1434096593","1","2","","","www.gsbj.cn","www.gansubanjia.com","www.gsbj.com","www.banjiagongsi.com","","","67","1"),("296","在行内样式，可以单独定义某个元素的样式，内容和样式不分离分离，但是使用不方便，所以很少使用","","0","1434100020","1434100020","1","1","","","正确","错误","","","","","63","3"),("297","质量度是搜索推广中衡量推广结果质量的综合性指标；","","0","1434100050","1434100050","1","1","","","正确","错误","","","","","138","3"),("298","当我们使用搜索引擎时，蜘蛛瞬间抓取了相关页面展示给我们","","0","1434100027","1434100027","1","2","","","正确","错误","","","","","74","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("299","质量度体现了网民对参与百度推广的关键词以及创意的认可程度；","","0","1434100067","1434100067","1","1","","","正确","错误","","","","","138","3"),("300","点击率是影响质量度的重要因素；","","0","1434100078","1434100078","1","1","","","正确","错误","","","","","138","3"),("301","创建栏目的方式有哪些","","2","1434100022","1434100022","1","2,3","","","更新栏目缓存","批量增加栏目","增加顶级栏目","更新栏目HTML","","","56","2"),("302","着陆页的相关性是影响质量度的重要因素；","","0","1434100091","1434100091","1","1","","","正确","错误","","","","","138","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("303","Robots文件夹是做什么的？","","2","1434100042","1434100042","1","4","","","存放机密文件","存放日志缓存","啥用没有","指引搜索引擎，规定了网站中哪些文件可以被爬取","","","67","1"),("304","同单元内关键词的质量度是影响质量度的重要因素；","","0","1434100104","1434100104","1","1","","","正确","错误","","","","","138","3"),("306","账户历史表现是影响质量度的重要因素；","","0","1434100128","1434100128","1","1","","","正确","错误","","","","","138","3"),("307","输入site命令可以查询网页是否被收录","","0","1434100122","1434100122","1","1","","","正确","错误","","","","","74","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("308","更换模板时出现乱码和布局混乱情况有哪些原因","","3","1434100100","1434100100","2","1,2,3","","","版本有误","字符编码不一致","CSS没加载上","","","","56","2"),("309","百度的权重大小是根据时间来计算的","","0","1434100147","1434100147","1","2","","","正确","错误","","","","","74","3"),("310","PV数(Pageview)：页面浏览次数，是指一个网页被显示的过程；","","0","1434100160","1434100160","1","1","","","正确","错误","","","","","137","3"),("311","在百度输入link查询网站的外链","","0","1434100166","1434100166","1","2","","","正确","错误","","","","","74","3"),("312","IP数：是指一段时间内访问网站的IP数；","","0","1434100177","1434100177","1","1","","","正确","错误","","","","","137","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("313","用ftp将本地网站上传到空间的哪个文件夹？","","3","1434100107","1434100107","1","1","","","wwwroot","others","wwwroot同级","只要在空间就可以","","","67","1"),("314","网站的收录量决定网站的排名","","0","1434100185","1434100185","1","2","","","正确","错误","","","","","74","3"),("315","UV(Unique Visitor)：访问您网站的一个访客；","","0","1434100192","1434100192","1","1","","","正确","错误","","","","","137","3"),("319","跳出率=  跳出量(只访问着陆页未进行二跳行为)/访问量*100%；","","0","1434100227","1434100227","1","1","","","正确","错误","","","","","137","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("320","影响网站排名的主要因素有哪些","","0","1434100203","1434100203","1","1,2,3,4","","","网站权重","网站收录量","网站的外链","网站内容的相关性","","","74","2"),("321","二跳率=  二跳量/访问量*100%；","","0","1434100240","1434100240","1","1","","","正确","错误","","","","","137","3"),("322","网站上传成功后怎么安装？","","4","1434100197","1434100197","1","2","","","在空间点击安装按钮","域名后面加install","自己就安装好了","进入网站主页安装","","","67","1"),("323","常用的DEDE模板列表有哪些","","5","1434100208","1434100208","1","1,2,3","","","head.htm","index.htm","list_article.htm","article_image.htm","","","56","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("324","DEDE更换模板时，根据模板所在的备份文件夹，需要改变相应的默认风格。","","6","1434100283","1434100283","2","1","","","正确","错误","","","","","56","3"),("325","选择网站空间时需要考虑哪些元素？","","5","1434100259","1434100259","3","1,2,3,4","","","主机操作系统和Web服务器是否能运行网站","主机数据库和开发语言是否支持网站","主机空间容量，月流量是否够用","主机空间安全","","","67","2"),("326","关键词分组的三个原则是：词性相同、词义相近、长短相差不大；","","0","1434100310","1434100310","1","1","","","正确","错误","","","","","136","3"),("327","计划可以按推广产品的种类来划分；","","0","1434100325","1434100325","1","1","","","正确","错误","","","","","136","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("328","计划可以按推广预算划分；","","0","1434100337","1434100337","1","1","","","正确","错误","","","","","136","3"),("329","更新主页HTML时，通常采用的是动态浏览模式","","7","1434100322","1434100322","2","2","","","正确","错误","","","","","56","3"),("330","计划可以按不同的客户人群划分；","","0","1434100348","1434100348","1","1","","","正确","错误","","","","","136","3"),("331","计划最好不要按地域划分；","","0","1434100362","1434100362","1","1","","","正确","错误","","","","","136","3"),("332","买主机的时候越便宜越好，免费的最好。","","6","1434100325","1434100325","1","2","","","正确","错误","","","","","67","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("333","计划可以按活动划；","","0","1434100376","1434100376","1","1","","","正确","错误","","","","","136","3"),("334","计划可以按品牌划分；","","0","1434100386","1434100386","1","1","","","正确","错误","","","","","136","3"),("335","网站上线后所有的东西都得重新上，没法把本地的文章传上去。","","7","1434100380","1434100380","1","2","","","正确","错误","","","","","67","3"),("336","搜索词代表了网民的需求；","","0","1434100429","1434100429","1","1","","","正确","错误","","","","","135","3"),("337","核心词的选择应基于企业产品和潜在顾客需求；","","0","1434100444","1434100444","1","1","","","正确","错误","","","","","135","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("338","“关键词规划师”是百度推广帐户中扩展关键词的工具；","","0","1434100456","1434100456","1","1","","","正确","错误","","","","","135","3"),("339","百度搜索推广帐户中的词是关键词；","","0","1434100468","1434100468","1","1","","","正确","错误","","","","","135","3"),("341","人群词一般也是长尾词；","","0","1434100509","1434100509","1","1","","","正确","错误","","","","","135","3"),("342","长尾词可以同时是产品词；","","0","1434100523","1434100523","1","1","","","正确","错误","","","","","135","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("344","网络营销比传统营销的优势包括","","0","1434100493","1434100493","2","4","","","采用网络营销，建立和维护企业站点需要投资，所以成本会有所增加，但是比传统营销效果更佳","网络营销比传统市场营销更安全","网络营销具有极强的主动性，可以帮助企业实现全程目标的运营管理","网络营销能够帮助企业增加销售、提高市场占有率","","","51","1"),("345","就受众范围来说，人群词的数量远大于通用词的数量；","","0","1434100570","1434100570","1","1","","","正确","错误","","","","","134","3"),("346","目前国内市场占有量前三的搜索引擎包括","","0","1434100527","1434100527","1","1,3,4","","","百度","谷歌","360","搜狗","","","74","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("347","就受众范围来说，纯品牌词的数量远小于产品词的数量；","","0","1434100582","1434100582","1","1","","","正确","错误","","","","","134","3"),("348","就转化能力来说，品牌词的转化能力最强；","","0","1434100592","1434100592","1","1","","","正确","错误","","","","","134","3"),("349","对一般小企业来说，不建议购买通用词；","","0","1434100603","1434100603","1","1","","","正确","错误","","","","","134","3"),("350","“手机”是一个产品词；","","0","1434100613","1434100613","1","2","","","正确","错误","","","","","134","3"),("351","“大学生找不到工作怎么办”是一个人群词；","","0","1434100627","1434100627","1","1","","","正确","错误","","","","","134","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("352","CPA是按什么付费的","","0","1434100570","1434100570","1","4","","","按天付费 ","按销售付费 ","按千次展现付费 ","按行为付费","","","51","1"),("353","百度搜索推广基础展现样式分为左侧展现和右侧展现两种；","","0","1434100661","1434100661","1","1","","","正确","错误","","","","","156","3"),("354","网民在搜索引擎中搜索的关键词都是搜索词；","","0","1434100675","1434100675","1","1","","","正确","错误","","","","","156","3"),("355","百度搜索推广帐户结构有四层；","","0","1434100684","1434100684","1","1","","","正确","错误","","","","","156","3"),("356","百度搜索推广帐户中，一个计划中最多包含1000个单元；","","0","1434100694","1434100694","1","1","","","正确","错误","","","","","156","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("357","网络营销是指采用4Rs理论来指导的营销方式","","0","1434100672","1434100672","2","2","","","正确","错误","","","","","51","3"),("358","百度搜索推广帐户中，最多包含100个计划；","","0","1434100705","1434100705","1","1","","","正确","错误","","","","","156","3"),("359","网络营销的产生和发展是特定条件下技术基础、观念基础和现实基础等综合因素共同作 用的结果。","","0","1434100706","1434100706","2","1","","","正确","错误","","","","","51","3"),("360","创意就是广告语。","","0","1434100736","1434100736","1","1","","","正确","错误","","","","","156","3"),("361","PV和UV实质是一样的","","0","1434100741","1434100741","1","2","","","正确","错误","","","","","51","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("362","使用搜索推广的最初是overture；","","0","1434100746","1434100746","1","1","","","正确","错误","","","","","156","3"),("363","一个IP地址可以对应多个域名","","0","1434100762","1434100762","1","1","","","正确","错误","","","","","51","3"),("364","百度推广平台的网址是tuiguang.baidu.com；","","0","1434100788","1434100788","1","1","","","正确","错误","","","","","133","3"),("365","百度推广平台在注册时的密码可以随意填写；","","0","1434100807","1434100807","1","2","","","正确","错误","","","","","133","3"),("366","网站上线后，有哪些安全设置措施。","","1","1434100533","1434100533","1","1,2,3,4,5","","","密码设置","安装安全补丁","后台目录重命名","精简设置 ","设置执行权限","","69","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("367","百度推广平台的核心模块包括搜索推广、网盟推广两部分；","","0","1434100820","1434100820","1","1","","","正确","错误","","","","","133","3"),("368","百度推广平台在不允值的情况下，可以随意改动账户中心；","","0","1434100833","1434100833","1","2","","","正确","错误","","","","","133","3"),("379","受众更精准，是搜索引擎营销的优势；","","0","1434101019","1434101019","1","1","","","正确","错误","","","","","132","3"),("369","dede后台目录install安装程序在安装成功后，最好删除.","","2","1434100823","1434100823","1","1","","","正确","错误","","","","","69","3"),("370","为了网站安全，可以更改重要目录执行 、php权限。","","3","1434100871","1434100871","1","1","","","正确","错误","","","","","69","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("371","百度帐号注册后一定要提交资质审核；","","0","1434100843","1434100843","1","2","<p>我们平时练习用的账号，不提交审核，也一样可以用一些基础的功能。</p>","","正确","错误","","","","","133","3"),("372","百度搜索推广帐号进入后有两个导航；","","0","1434100919","1434100919","1","1","","","正确","错误","","","","","133","3"),("373","百度搜索推广的网址是：fengchao.baidu.com；","","0","1434100936","1434100936","1","1","","","正确","错误","","","","","133","3"),("374","借助于搜索引擎展开的企业营销，即搜索引擎营销；","","0","1434100966","1434100966","1","1","","","正确","错误","","","","","132","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("375","网站安全检测可以使用?","","4","1434100906","1434100906","1","3","","","百度 ","谷歌","360网站卫士","搜狐","","","69","1"),("376","质量高的伪原创具备的原则有哪些？","","0","1434100842","1434100842","1","1,2,3","","","结构要清晰","内容要懂得取长补短","中心要鲜明","照抄现有文章","","","87","2"),("377","百度是目前中国用户最多的搜索引擎；","","0","1434100991","1434100991","1","1","","","正确","错误","","","","","132","3"),("378","搜索引擎在网民中的使用率低于即时通讯的；","","0","1434101001","1434101001","1","1","","","正确","错误","","","","","132","3"),("380","针对性解决方案，是搜索引擎营销的优势；","","0","1434101030","1434101030","1","1","","","正确","错误","","","","","132","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("381","以下属于伪原创技巧的是","","0","1434100998","1434100998","1","1,2,3,4,5","","","跟随法","标签法","增加法","拆分法","颠覆法","","87","2"),("382","搜索引擎营销的形势中包含SEO、PPC等；","","0","1434101041","1434101041","1","1","","","正确","错误","","","","","132","3"),("383","搜索用户、搜索引擎、推广企业三者之间是相互联系，缺一不可的；","","0","1434101054","1434101054","1","1","","","正确","错误","","","","","132","3"),("384","原创文章的基本标准有哪些","","0","1434101050","1434101050","1","1,2,3","","","标题包含目标关键词","内容中穿插关键词","尽量使用括号类小标题","内容中带有本站锚链接","","","87","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("385","dede安装完成后,为了确保安全，在不影响网站运行稳定的情况下，可以把以下哪些不经常用到的文件删除?","","5","1434100996","1434100996","1","1,2,3,4,5","","","member","company","plus/guestbook","special","install","","69","2"),("386","伪原创修改内容的方法有哪些","","0","1434101094","1434101094","1","1,2,3,4,5,6","","","首段自创法"," 段落调整法","词语替换法","文字排序法","数字替换法","修改尾段法","87","2"),("387","刚刚上线的小网站没有什么价值不用做安全防护，只有大网站才需要做。","","6","1434101138","1434101138","1","2","","","正确","错误","","","","","69","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("388","伪原创时文章标题和关键词最好重复出现几次？","","0","1434101148","1434101148","1","2","","","0次","2-3次","3-4次","4-5次","","","87","1"),("389","以下哪一种导入链接对 PR 值影响最大？","","1","1434101060","1434101060","1","1","","","PR 值很高，但无相关性的站点","相关性很强，但 PR 值一般的站点","大量 PR 值一般，无相关性的站点","","","","85","1"),("390","以下属于能利用网站内容现有资源进行整合的伪原创页面的是","","0","1434101201","1434101201","1","1,2,3,4","","","Tags页面","网站专题页面  ","Top 排行榜 ","汇总热门关键词","","","87","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("391","Swift 语言适用于哪种应用程序？","","0","1434101139","1434101139","1","","<p>ios、Mac应用程序<br /><br /><br /></p>","","正确","错误","","","","","10","0"),("392","外链对于网站优化的作用有哪些","","2","1434101203","1434101203","1","1,2,3","","","提升网站PR值","提升网站关键词排名","提升网站收录","","","","85","2"),("393","原创文章的好处有哪些？","","0","1434101243","1434101243","1","1,2,3,4","","","提高网站权重","增加网站收录量","增加网站外链","提高用户体验","","","87","2"),("394","使用Swift语言进行开发的条件是什么？","","0","1434101261","1434101261","1","","<p>解析：</p><p>Xcode版本 &gt;= 6.0，Mac系统版本 &gt;= 10.9.3<br /><br /><br /></p>","","正确","错误","","","","","10","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("395","下列查询外链的方法中，正确的是","","3","1434101266","1434101266","2","2,4","","","谷歌查询site:+网站域名地址","百度查询domain:+网站域名地址","百度管理员工具:http：//site.google.com/","Alexa查询外链http://www.alexa.com","","","85","2"),("396","下面哪些方法能增加有效外链","","4","1434101362","1434101362","1","1,2,3","","","交换友情链接","论坛、贴吧、博客外链","SNS社区论坛","","","","85","2"),("397","swift源文件的拓展名:","","0","1434100497","1434100497","1","1","","",".swift",".xib",".storyboard",".plist","","","14","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("398","Swift的语法特点是什么？","","0","1434101347","1434101347","1","","<p>解析：</p><p>从它的语法中看到Objective-C、JavaScript、C#、Python等语言的影子<br />借鉴了Objective-C、JavaScript、C#、Python等语言的优点<br />同时具可以轻松地与Objective-C、C混合使用（相互调用）<br /><br /><br /></p>","","正确","错误","","","","","10","0"),("399","Seo网站内容有规律的更新是十分必要的","","0","1434101277","1434101277","1","1","","","正确","错误","","","","","87","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("635","一个类的delegate（代理）的作用不正确的是 ","","0","1434106157","1434106157","1","1,4","<p>解析：delegate的方法在其它类中实现<br /></p>",""," delegate中的函数只能在本类中实现 ","主要用于不同类型的对象之间一对一传递消息 ","没有指派则不会触发 ","可以一个对象的delegate指派给多个其他类型的对象","","","24","2"),("400","swift优点？","","0","1434101419","1434101419","1","","<p>解析：</p><p>优点：高效、现代、安全。既有类似Python的易用性，又摒弃了Objective-C的复杂语法，同时可以兼容Objective-C语言。<br /></p>","","正确","错误","","","","","10","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("401","高质量友情链接要符合的标准有","","5","1434101401","1434101401","3","2,4","","","网页快照最好在3-7天内","网站收录越多越好","网站最好每天更新","外链导出数量控制50个以内","","","85","2"),("402","链接词的规划应该注意事项","","6","1434101488","1434101488","2","1,3","","","链接词最好用网站的首页目标关键词","短时间内快速增加、删除链接词","禁止从头到尾一直用一个和目标关键词无关的词","","","","85","2"),("403","在swift语言的语法特点:","","0","1434101467","1434101467","1","4","","","不需要编写main函数","不需要写每条语句后的分号，同行的代码需要加上分号。","多行注释可以嵌套。","以上都正确。","","","14","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("404","分别用oc，swift建立一个lable？","","0","1434101543","1434101543","1","","<p>解析：</p><p><br /></p><p>UILabel *label = [[UILabel alloc] init];<br /> &nbsp; &nbsp;label.frame = CGRectMake(100, 100, 100,100);<br />lable.text = @&quot;hi&quot;;<br />[self.view addSubView:label];</p><p><br />var label &nbsp;= UIlabel()<br />label.label.frame = CGRectMake(100, 100, 100,100)<br />self.view addSubView(label)<br /><br /><br /></p>","","正确","错误","","","","","10","0"),("405","购买外链时，需要注意的是","","7","1434101536","1434101536","2","1,3,4","","","对象网站的关键词排名","对象网站的PV值","对象网站的链接数量","JS链接","","","85","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("407","HTML语言中的注册表单开始时可以使用( )标签来标记","","3","1434101701","1434101701","1","2","","","&lt;h1&gt;","&lt;form&gt;","&lt;a&gt;","&lt;ol&gt;","","","60","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("408"," c 、oc 和swift语法区别？","","0","1434101607","1434101607","1","","<p>解析：</p><p><span style=\"font-size:18px;\">c面向过程<br />oc面向对象</span></p><p><span style=\"font-size:18px;\">swift</span><span style=\"font-family:\">可以看到Objective-C</span><span style=\"font-family:\">、</span><span style=\"font-family:\">JavaScript</span><span style=\"font-family:\">、</span><span style=\"font-family:\">C#</span><span style=\"font-family:\">、</span><span style=\"font-family:\">Python</span><span style=\"font-family:\">等语⾔言的影⼦。</span></p><p><br /></p>","","正确","错误","","","","","10","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("409","Swift语言中输出函数的输出方式正确的是: ","","0","1434101755","1434101755","1","3,4","<p style=\"font-size:20px;font-family:&#39;heiti sc light&#39;;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"font-family:宋体, simsun;font-size:20px;color:#000000;\">print:直接输出，不自动换行</span></p><p style=\"font-size:20px;font-family:&#39;heiti sc light&#39;;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"font-family:宋体, simsun;\"><span style=\"font-size:20px;font-family:宋体, simsun;color:#000000;\">printl</span><span style=\"font-size:20px;font-family:宋体, simsun;color:#000000;\">n</span><span style=\"font-size:20px;font-family:宋体, simsun;color:#000000;\">:</span><span style=\"font-size:24px;font-family:微软雅黑;color:white;text-combine:letters\"><span style=\"font-family:宋体, simsun;font-size:20px;color:#000000;\">输出并</span><span style=\"font-family:宋体, simsun;font-size:20px;color:#000000;\">在输出结束之后换行</span></span><br /></span></p><p style=\"font-size:20px;font-family:&#39;heiti sc light&#39;;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><br /></p>",""," printf(\"hello\");"," NSLog (@\"hello\");"," printfln(\"hello\")"," printf(\"hello\")","","","14","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("410","swift语言中的字符串的拼接输出和插入输出,请用代码写出来。 ","","0","1434102070","1434102070","2","","<p style=\"font-size:20px;font-family:&#39;heiti sc light&#39;;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"font-family:menlo;color:#000000;\">(</span><span style=\"font-family:menlo;color:#000000;\">1</span><span style=\"font-family:menlo;color:#000000;\">).</span><span style=\"color:#000000;\">字符串的拼接输出</span></p><p style=\"font-size:20px;font-family:menlo;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\">let string1 = </span><span style=\"color:#000000;\">&quot;</span><span style=\"font-family:&#39;heiti sc light&#39;;color:#000000;\">欢迎</span><span style=\"color:#000000;\">&quot;</span></p><p style=\"font-size:20px;font-family:menlo;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\">let string2 = </span><span style=\"color:#000000;\">&quot;</span><span style=\"font-family:&#39;heiti sc light&#39;;color:#000000;\">来到学啊网！</span><span style=\"color:#000000;\">&quot;</span></p><p style=\"font-size:20px;font-family:menlo;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\">printf(string1 + string2 );</span></p><p style=\"font-size:20px;font-family:&#39;heiti sc light&#39;;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"font-family:menlo;color:#000000;\">(</span><span style=\"font-family:menlo;color:#000000;\">2</span><span style=\"font-family:menlo;color:#000000;\">).</span><span style=\"color:#000000;\">字符串的插入输出</span></p><p style=\"font-size:20px;font-family:menlo;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\">let string = </span><span style=\"color:#000000;\">&quot;</span><span style=\"font-family:&#39;heiti sc light&#39;;color:#000000;\">来到</span><span style=\"color:#000000;\">&quot;</span></p><p style=\"font-size:20px;font-family:menlo;color:#ff4647;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\">printf(&quot;</span><span style=\"font-family:&#39;heiti sc light&#39;;color:#000000;\">欢迎</span><span style=\"color:#000000;\">(string)</span><span style=\"font-family:&#39;heiti sc light&#39;;color:#000000;\">学啊网</span><span style=\"color:#000000;\">&quot;</span><span style=\"color:#000000;\">)</span></p><p style=\"font-size:20px;font-family:&#39;heiti sc light&#39;;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><br /></p><p style=\"font-size:20px;font-family:menlo;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"font-variant-ligatures:no-common-ligatures;color:#ff4647\"><br /></span></p><div><span style=\"font-variant-ligatures:no-common-ligatures;color:#ff4647\"><br /></span></div><p><br /></p>","","正确","错误","","","","","14","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("411","简述swift语言的命名规则。","","0","1434102333","1434102333","1","","<p style=\"font-size:20px;font-family:&#39;heiti sc light&#39;;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"font-family:menlo;color:#000000;\">Swift</span><span style=\"color:#000000;\">中可以使用任何字符作为常量和变量名，包括</span><span style=\"font-family:menlo;color:#000000;\">Unicode</span><span style=\"color:#000000;\">。</span></p><p style=\"font-size:20px;font-family:&#39;heiti sc light&#39;;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\">但不能含有数字符号、箭头、无效的</span><span style=\"font-family:menlo;color:#000000;\">Unicode</span><span style=\"color:#000000;\">。</span></p><p style=\"font-size:20px;font-family:&#39;heiti sc light&#39;;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\">横线-、制表符，且不能以数字开头。</span></p><p><br /></p>","","正确","错误","","","","","14","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("412","根据你所学的知识，简述C语言，OC语言和swift语言的区别。","","0","1434102428","1434102428","1","","<p style=\"font-size:20px;font-family:&#39;heiti sc light&#39;;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"font-family:menlo;color:#000000;\">(1</span><span style=\"font-family:menlo;color:#000000;\">).C</span><span style=\"color:#000000;\">语言是我们学习</span><span style=\"font-family:menlo;color:#000000;\">OC</span><span style=\"color:#000000;\">语言和</span><span style=\"font-family:menlo;color:#000000;\">swift</span><span style=\"color:#000000;\">语言的基础语言。</span></p><p style=\"font-size:20px;font-family:&#39;heiti sc light&#39;;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"font-family:menlo;color:#000000;\">(</span><span style=\"font-family:menlo;color:#000000;\">2</span><span style=\"font-family:menlo;color:#000000;\">).OC</span><span style=\"color:#000000;\">语言是我们当今比较成熟的一种编程语言</span><span style=\"font-family:menlo;color:#000000;\">,</span><span style=\"color:#000000;\">用于比较大型的软件的开发</span><span style=\"font-family:menlo;color:#000000;\">,</span></p><p style=\"font-size:20px;font-family:&#39;heiti sc light&#39;;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\">比较容易去修复</span><span style=\"font-family:menlo;color:#000000;\">BUG</span><span style=\"color:#000000;\">。</span></p><p style=\"font-size:20px;font-family:&#39;heiti sc light&#39;;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"font-family:menlo;color:#000000;\">(</span><span style=\"font-family:menlo;color:#000000;\">3</span><span style=\"font-family:menlo;color:#000000;\">).swift</span><span style=\"color:#000000;\">语言是苹果公司基于</span><span style=\"font-family:menlo;color:#000000;\">OC</span><span style=\"color:#000000;\">语言开发的一种新的编程语言。</span></p><p><br /></p>","","正确","错误","","","","","14","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("413","常见的友情链接作弊手法有几种？","","1","1434102346","1434102346","3","1,2,3,4","","","JS代码作弊"," I frame框架作弊","Nofollow属性作弊"," PR劫持作弊","","","94","2"),("414","从竞争对手的那些相关数据可分析出对我们有用的信息？","","0","1434102353","1434102353","1","1,2","",""," 网站PR值","网站首页外链","友情链接","网站收录分析","","","91","2"),("415","以下常见的黑帽SEO作弊手法正确的是？","","0","1434102474","1434102474","3","1,2,3,5,6","","","关键词堆砌","隐藏文字","隐藏链接","页面跳转","复制站点或内容","隐藏页面","94","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("416","分析竞争对手的关键词,可从哪几个方面分析","","0","1434102520","1434102520","1","1,2,3","","","分析竞争对手的主推关键词","网站内部主推关键词","分析竞争对手的长尾关键词","","","","91","2"),("417","以下是网站被降权表现的有？","","3","1434102542","1434102542","1","1,2,3,4,5","","","网站收录减少","快照更新速度降低","网站排名下降","网站首页被屏蔽","网站页面被删除","","94","2"),("418","网站被降权的原因有哪些？","","4","1434102601","1434102601","1","1,2,3,4,5,6","","","内容不当","网站程序源有问题","服务器不稳定","友链问题","搜索算法改变","网站被黑","94","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("419","1.	在Swift语言使用中，if语句后面的执行语句如果只有一条，那么语句后面的大括号｛｝可以省略不写","","0","1434100447","1434100447","1","2","<p style=\"text-indent:0;margin-left:24px;\"><span style=\"font-family:宋体\">解析：在</span>Swift<span style=\"font-family:宋体\">语言中每一条执行语句后面都要用大括号｛｝括起来，否则就会报错，这与</span>c<span style=\"font-family:宋体\">语言以及</span>oc<span style=\"font-family:宋体\">语言有所不同。</span></p><p><br /></p>","","ture","false","","","","","25","3"),("420","URL优化手段包含301重定向？","","5","1434102657","1434102657","2","1","","","正确","错误","","","","","94","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("421","分析竞争对手网站的那些要素，然后知道我今后的大体方向，如何制定计划？","","0","1434102593","1434102593","1","1,2,3,5,6","","","网站外链优化","域名PR值分析","反向链接","合理安排seo工作人数","友情链接","页面收录分析","91","2"),("422","首页模块不合理如何解决？","","6","1434102683","1434102683","1","1,2,3,4","","","有文章更新的模块放在首页","有计划有规律对的更新","提升文章的原创度","将有价值的内容放在首页","","","94","2"),("423","关于loadview方法正确的是:  ","","0","1434102661","1434102661","2","1,4","","","自己的方法要实现的时候调用","每次加载视图的时候调用","每次刷新视图的时候调用","程序中只加载一次","","","31","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("424","SEO计划制定需要参考那些要素？","","0","1434102696","1434102696","1","1,2,3","","","关键词（主推关键词、长尾关键词）","确定SEO内容：人力 物力  财力 、不同网站类型、优化侧重点不同","网站外链优化","","","","91","2"),("425","7、目标关键词如何设置？","","7","1434102724","1434102724","1","1,2,3,4","","","核心关键词1-3个放在首页","频道页设置1-2个目标关键词 ","内容页放置1个目标关键词 ","掌握关键词密度,勿首页堆砌关键词","","","94","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("426","制定SEO计划的方案执行周期我们应该从那些方面入手？","","0","1434102754","1434102754","1","1,3","","","明确SEO目的：网站收录和收录比、明确关键词优化结果、提升网站流量","检测网站目录提交是否被收录","实施SEO内容：合理安排seo工作人数","","","","91","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("427","2.	程序分析题： for i in 0..<6{ print(i) } for _ in 0…2{ println(“****”) } 写出程序的输出结果：","","0","1434102684","1434102684","3","","<p><br /></p><p style=\"text-indent:0;margin-left:24px;\"><span style=\"font-family:宋体\">答案：</span>012345****</p><p style=\"text-indent:48px;margin-left:24px;\">****</p><p style=\"text-indent:48px;margin-left:24px;\">****</p><p style=\"text-indent:48px;margin-left:24px;\"><span style=\"font-family:宋体\">解析：</span>fo_in<span style=\"font-family:宋体\">循环中是按顺序从范围中取值；范围的长度就是循环体执行的个数，</span>println<span style=\"font-family:宋体\">可以自动换行</span></p><p><br /></p>","","","错误","","","","","25","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("428","如何实时监测SEO计划的进展效果？","","0","1434102807","1434102807","1","1,2,3","","","监测网站关键词排名","监测网站流量","监测网站相关数据变化(PR值、搜索引擎收录，网站外链数）","","","","91","2"),("429","MVC指的是: ","","0","1434102748","1434102748","1","1","<p style=\"font-size:20px;font-family:menlo;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\">MVC指的： Model </span><span style=\"color:#000000;\">View &nbsp;</span><span style=\"color:#000000;\">Controller </span></p><p><br /></p>","","Model,View,Controller","Main,View,Controller","Model,Void,Controller","Main,Void,Controller","","","31","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("430","3.	程序分析题： out :for _ in 1…2{ for _in 1…3{ println(“hello world”) break out  } print(“你好”) } 输出结果为：（）","","0","1434102811","1434102811","1","2","<p><br /></p><p><span style=\"font-family:宋体\">解析：程序中使用标签，</span>out<span style=\"font-family:宋体\">，直接跳出循环</span></p><p><br /></p>","","A.	hello world 你好","B.	hellow world","C.	hellow world 你好 hellow world 你好","你好","","","25","1"),("431","如何根据得到的数据实时调整SEO内容，保证最优化?","","0","1434102864","1434102864","1","1,2,3,4","","","检测友情链接是否合作了","检测网站目录提交是否被收录","检测论坛帖子是否被删除","检测博客空间所发博文是否被搜索引擎收录","","","91","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("432","什么是UI，UIView，UIWindow？Uiview和UIWindow的区别？","","0","1434102900","1434102900","1","","<p>解析：</p><p>UI 用户界面，用户能够看到的各种各样的页面元素<br />UIWindow是一种特殊的UIView，通常在一个程序中只会有一个UIWindow，但可以手动创建多个UIWindow，同时加到程序里面。UIWindow在程序中主要起到三个作用：1、作为容器，包含app所要显示的所有视图2、传递触摸消息到程序中view和其他对象3、与UIViewController协同工作，方便完成设备方向旋转的支持<br /> &nbsp;UIwindow是UIView的子类，UIWindow的主要作用：一是提供一个区域来显示UIView，二是将事件（event）的分发给UIView，一个应用基本上只有一个UIWindow，不过也有例外；<br /></p>","","正确","错误","","","","","13","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("433","每次刷新界面的时候调用哪个方法: ","","0","1434102877","1434102877","1","2,4","","","ViewDidLoad ","viewWillAppear","viewWillDisappear","loadview","","","31","2"),("434","接收到内存警告的时候调用的方法是：","","0","1434102985","1434102985","1","","<p style=\"font-size:20px;font-family:menlo;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\"> - (</span><span style=\"color:#000000;\">void)didReceiveMemoryWarning;</span></p><p><br /></p>","","正确","错误","","","","","31","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("435","4.	switch语句在swift中和oc中用什么不同（）","","0","1434102911","1434102911","1","1,2,3,4","","","A.	在C语言中case的 结尾没有break，就会接着执行下一个case，而在swift中不需要在每一个后面增加一个break，执行完代码后默认自动退出switch语句","B.	在swift语句中，一个case后可以跟多个匹配，在OC中则不可","swift语句中，case后面可以跟一个范围","swift语句可以使用where来增加判断语句","","","25","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("436","怎么在viewController中加载一个lable,写出相关的代码.","","0","1434103023","1434103023","2","","<p style=\"font-size:20px;font-family:menlo;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\">- (</span><span style=\"color:#000000;\">void)viewDidLoad {</span></p><p style=\"font-size:20px;font-family:menlo;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\"> &nbsp; &nbsp;[</span><span style=\"color:#000000;\">super viewDidLoad];</span></p><p style=\"font-size:20px;font-family:menlo;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\"> &nbsp; &nbsp;UILabel *lable = [[UILabel alloc] init];</span></p><p style=\"font-size:20px;font-family:menlo;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\"> &nbsp; &nbsp;lable.frame = CGRectMake(</span><span style=\"color:#000000;\">100, </span><span style=\"color:#000000;\">100, </span><span style=\"color:#000000;\">100, </span><span style=\"color:#000000;\">30);</span></p><p style=\"font-size:20px;font-family:menlo;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\"> &nbsp; &nbsp;lable.text = </span><span style=\"color:#000000;\">@&quot;</span><span style=\"font-family:&#39;heiti sc light&#39;;color:#000000;\">文本</span><span style=\"color:#000000;\">&quot;;</span></p><p style=\"font-size:20px;font-family:menlo;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\"> &nbsp; &nbsp;[</span><span style=\"color:#000000;\">self.view addSubview:lable];</span></p><p style=\"font-size:20px;font-family:menlo;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\">}</span></p><p><br /></p>","","正确","错误","","","","","31","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("437","填空 UIview的常用属性 frame______ bounds______ center______ transform____ superview_____ subviews_____ alpha_____ tag____ userInteractionEnabled_____ hidden__","","0","1434102963","1434102963","1","","<p>解析： <br /></p><p>frame： 相对父视图的位置和大小 &nbsp;<br /> &nbsp; &nbsp;bounds：相对自身的位置和大小，所以bounds的x和y永远为0 &nbsp;<br /> &nbsp; &nbsp;center：子视图的中点坐标相对父视图的位置 &nbsp;<br /> &nbsp; &nbsp;transform:可以通过这个属性控制视图的放大缩小和旋转 &nbsp; <br /> &nbsp; &nbsp;superview：获取父视图 &nbsp;<br /> &nbsp; &nbsp;subviews：获取所有子视图 &nbsp;<br /> &nbsp; &nbsp;alpha：视图的透明度（0－1） &nbsp;<br /> &nbsp; &nbsp;tag：视图的标志，设置了tag后，可以通过viewWithTag方法拿到这个视图 &nbsp;<br /> &nbsp; &nbsp;userInteractionEnabled：是否响应用户事件 <br /> &nbsp; &nbsp;hidden 控制视图的显隐<br /></p>","","正确","错误","","","","","13","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("438","在swift中，switch判断语句中的default可以省略不写","","0","1434103033","1434103033","1","2","<p><br /></p><p style=\"text-indent:0;margin-left:48px;\"><span style=\"font-family:宋体\">答案：错误</span></p><p style=\"text-indent:0;margin-left:48px;\"><span style=\"font-family:宋体\">解析：在</span>Swift<span style=\"font-family:宋体\">中，每一个</span>case<span style=\"font-family:宋体\">后面必须跟一个可以执行的语句，</span>switch<span style=\"font-family:宋体\">要保证处理的所有可能的情况，不然编译器直接报错，所以</span>default<span style=\"font-family:宋体\">一定要加上</span></p><p><br /></p>","","ture","false","","","","","25","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("439","loadview 和 viewDidLoad的区别","","0","1434103047","1434103047","1","","<p style=\"font-size:20px;font-family:menlo;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\">(</span><span style=\"color:#000000;\">1) loadView: </span><span style=\"font-family:&#39;heiti sc light&#39;;color:#000000;\">此方法在控制器的</span><span style=\"color:#000000;\">view</span><span style=\"font-family:&#39;heiti sc light&#39;;color:#000000;\">为</span><span style=\"color:#000000;\">nil</span><span style=\"font-family:&#39;heiti sc light&#39;;color:#000000;\">的时候被调用。</span><span style=\"color:#000000;\"> </span></p><p style=\"font-size:20px;font-family:&#39;heiti sc light&#39;;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\">此方法用于以编程的方式创建</span><span style=\"font-family:menlo;color:#000000;\">view</span><span style=\"color:#000000;\">的时候用到。</span></p><p style=\"font-size:20px;font-family:menlo;color:#ffffff;margin-top:0px;margin-bottom:0px;\"><span style=\"color:#000000;\">(</span><span style=\"color:#000000;\">2) viewDidLoad:</span><span style=\"font-family:&#39;heiti sc light&#39;;color:#000000;\">此方法只有当</span><span style=\"color:#000000;\">view</span><span style=\"font-family:&#39;heiti sc light&#39;;color:#000000;\">从</span><span style=\"color:#000000;\">nib</span><span style=\"font-family:&#39;heiti sc light&#39;;color:#000000;\">文件初始化的时候才被调用。</span></p><p><br /></p>","","正确","错误","","","","","31","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("440","什么是UITableViewCell","","0","1434103024","1434103024","1","","<p>UITableView的每一行都是一个UITableViewCell，通过dataSource的tableView:cellForRowAtIndexPath:方法来初始化每一行</p><p>UITableViewCell是UIView的子类，内部有个默认的子视图:contentView。contentView是UITableViewCell显示内容的父视图，并负责显示一些辅助指示视图。辅助指示视图的作用是显示一个表示动作的图标，可以通过设置UITableViewCell的accessoryType来显示，默认是UITableViewCellAccessoryNone，即不显示辅助指示视图 ，其他值如下:</p><p>UITableViewCellAccessoryDisclosureIndicator </p><p>UITableViewCellAccessoryDetailDisclosureButton</p><p>UITableViewCellAccessoryCheckmark</p><p><br /></p>","","","","","","","","83","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("441","UITableView有哪几种样式？","","0","1434103124","1434103124","1","","<p>有2种样式.UITableViewStylePlain 和UITableViewStyleGrouped。<br /></p>","","","","","","","","83","0"),("442","UITableView经常使用的2个协议是什么？其中要注意什么？","","0","1434103165","1434103165","1","","<p>UITableViewDataSource,UITableViewDelegate。</p><p>其中UITableViewDataSource中有2个方法是必须要实现的- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section &nbsp;和 - (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath</p><p><br /></p>","","","","","","","","83","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("443","程序分析题： let grade = “A”;    switch grade{    case “A”:    println(“优秀”)    case “B”:    println(“良好”) case “C”:    println(“及格”) default： printin(“未知成绩”) 输出结果（）","","0","1434103085","1434103085","3","2","<p><br /></p><p><span style=\"font-family:宋体\">解析：在</span>swift<span style=\"font-family:宋体\">中不需要在每一个后面增加一个</span>break<span style=\"font-family:宋体\">，执行完代码后默认自动退出</span>switch<span style=\"font-family:宋体\">语句。</span></p><p><br /></p>","","	优秀 良好 及格","优秀","优秀 良好 及格","未知成绩","","","25","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("444","UIwindow可以通过frame来确定其位置。","","0","1434103076","1434103076","1","","<p>B<br /></p>","","true","fault","","","","","13","3"),("445","UITableViewDataSource主要用来做什么？","","0","1434103231","1434103231","2","","<p>UITableView需要一个数据源（dataSource）来显示数据，UITableView会向数据源查询一共有多少行数据以及每一行显示什么数据等。没有设置数据源的UITableView只是个空壳。凡是遵守UITableViewDataSource协议的OC对象，都可以是UITableView的数据源。<br /></p>","","","","","","","","83","0"),("446","UIview是uiwindow的子类","","0","1434103279","1434103279","1","","","","true","fault","","","","","13","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("447","编程题：用switch编写一个成绩输出程序：当成绩为90—100输出优秀，当成绩为70—90时输出良好，当成绩为60—70时，输出及格，60分以下，输出不及格","","0","1434103255","1434103255","2","","<p><br /></p><p style=\"text-indent:0;margin-left:72px;\"><span style=\"font-family:宋体\">答案：</span></p><p style=\"text-indent:0;margin-left:72px;\">let score = 95</p><p style=\"text-indent:0;margin-left:72px;\">switch score/10{</p><p style=\"text-indent:0;margin-left:72px;\">case:10<span style=\"font-family:宋体\">，</span>9</p><p style=\"text-indent:0;margin-left:72px;\">println(“<span style=\"font-family:宋体\">优秀</span>”)</p><p style=\"text-indent:0;margin-left:72px;\">case 1:7<span style=\"font-family:宋体\">，</span>8</p><p style=\"text-indent:0;margin-left:72px;\">println(“<span style=\"font-family:宋体\">优秀</span>”)</p><p style=\"text-indent:0;margin-left:72px;\">case:6</p><p style=\"text-indent:0;margin-left:72px;\">default<span style=\"font-family:宋体\">：</span></p><p style=\"text-indent:0;margin-left:72px;\">println(“<span style=\"font-family:宋体\">不及格</span>”)</p><p><br /></p>","","","","","","","","25","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("448","UITableViewDelegate主要用来做什么？","","0","1434103271","1434103271","2","","<p>通常都要为UITableView设置代理对象（delegate），以便在UITableView触发一下事件时做出相应的处理，比如选中了某一行。凡是遵守了UITableViewDelegate协议的OC对象，都可以是UITableView的代理对象</p><p>通常情况下，会让控制器充当UITableView的dataSource和delegate</p><p><br /></p>","","","","","","","","83","0"),("449","一个app中只有一个window","","0","1434103328","1434103328","1","","<p>B<br /></p>","","true","fault","","","","","13","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("450","程序分析题switch point { case let (x,y)where x == y: println(“这个点在斜率45度的直线上”) fallthrough  case let(x,y) where x == -y: printin(“这个点在斜率135上”) default: println(“不在这两条线上”) 指出错误：","","0","1434103302","1434103302","3","","<p><br /></p><p style=\"text-indent:0;margin-left:72px;\"><span style=\"font-family:宋体\">答案：第四行有错误</span></p><p style=\"text-indent:0;margin-left:72px;\"><span style=\"font-family:宋体\">解析：</span>fallthrough<span style=\"font-family:宋体\">后面的</span>case<span style=\"font-family:宋体\">或者</span>default<span style=\"font-family:宋体\">不能定义常量或者变量</span></p><p style=\"text-indent:0;margin-left:72px;\"> </p><p><br /></p>","","","","","","","","25","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("451","需要对UITableViewCell做些操作的时候需要用哪个方法？其中为了节省内存，我们可以使用重用机制，重用机制具体操作是什么？","","0","1434103304","1434103304","3","","<p>- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath</p><p>重用机制的具体操作：</p><p> &nbsp;NSString *identifier = @&quot;cellIdentifier&quot;;//定义一个重用标示符</p><p> &nbsp; UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];//取出有对应重用标示符的重用的cell &nbsp; </p><p> if (!cell)</p><p> &nbsp; &nbsp;{</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:identifier];</p><p> &nbsp; &nbsp;}</p><p><br /></p>","","","","","","","","83","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("452","frame： 相对父视图的位置和大小 ","","0","1434103371","1434103371","1","","<p>A<br /></p>","","true","fault","","","","","13","3"),("453","bounds：相对父视图的位置和大小 ","","0","1434103406","1434103406","1","","<p>B<br /></p>","","true","fault","","","","","13","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("454","为什么使用重用机制？","","0","1434103394","1434103394","2","","<p>iOS设备的内存有限，如果用UITableView显示成千上万条数据，就需要成千上万个UITableViewCell对象的话，那将会耗尽iOS设备的内存。要解决该问题，需要重用UITableViewCell对象</p><p>重用原理：当滚动列表时，部分UITableViewCell会移出窗口，UITableView会将窗口外的UITableViewCell放入一个对象池中，等待重用。当UITableView要求dataSource返回UITableViewCell时，dataSource会先查看这个对象池，如果池中有未使用的UITableViewCell，dataSource会用新的数据配置这个UITableViewCell，然后返回给UITableView，重新显示到窗口中，从而避免创建新对象</p><p><br /></p>","","","","","","","","83","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("455","swift语言中switch语句可以使用（）方法增添判断条件","","0","1434103388","1434103388","1","","<p><br /></p><p style=\"text-indent:0;margin-left:72px;\"><span style=\"font-family:宋体\">答案：</span>where</p><p style=\"text-indent:0;margin-left:72px;\"><span style=\"font-family:宋体\">解析：</span></p><p><br /></p>","","","","","","","","25","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("456"," 编程题   创建一个View，要求视图的位置(100 ,100 )大小 (110, 110 )  背景颜色为blue  透明度 0.5   ","","0","1434103437","1434103437","1","","<p>解析<br /></p><p>UIView &nbsp;*view= [[UIView alloc] initWithFrame:CGRectMake(100, 100, 110, 110)];<br /> &nbsp; &nbsp;view.backgroundColor = [UIColor blueColor];<br /> &nbsp; &nbsp;view.alpha = 0.5;<br /> &nbsp; &nbsp;[self.view addSubview:view];<br /></p>","","正确","错误","","","","","13","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("457","TableView中需要注意的事项 ","","0","1434103427","1434103427","2","","<p>1，系统默认情况tableView是从父视图的顶部开始加载，整个frame和父视图的frame相同 &nbsp;</p><p>2，先计算高度，后获取cell</p><p>3，cell上一切的子视图的父视图都是cell.contentView</p><p><br /></p>","","","","","","","","83","0"),("458","以下句子中正确的是","","0","1434103360","1434103360","1","3","<p>A选项中case的值必须是整型 B跳转结束本次开始下次循环 D不会报错<br /></p>","","使用switch语句，case子句中的值可以是浮点型","在for循环语句中使用continue跳转，直接结束循环","跳转语句中goto语句是无条件跳转","程序运行中switch语句中没有找到对应表达式的case值会报错","","","35","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("459","下面不属于swift支持的循环结构：","","0","1434103428","1434103428","1","3","<p><br /></p><p style=\"text-indent:0;margin-left:72px;\"><span style=\"font-family:宋体\">解析：</span>switch<span style=\"font-family:宋体\">属于选择结构</span></p><p><br /></p>","","for","for-in","switch","while","","","25","1"),("460","重写方法的关键字","","0","1434103212","1434103212","1","1","<p>B：self：方法的调用者</p><p>C：alloc：开辟内存空间</p><p>D：init：初始化<br /></p>","","super","self","alloc","init","","","37","1"),("461","对象调用的三种方法分别是","","0","1434103506","1434103506","1","","<p>对象调用的三种方法分别是:presentviewController &nbsp;pushViewController &nbsp; popViewController</p><p><br /></p>","","正确","错误","","","","","72","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("462","怎样把基本数据类型转化成对象","","0","1434103555","1434103555","1","","<p>NSNumber *intNumber = [NSNumber numberWithInteger:80];</p><p>//通过一个intNumber对象来获得相应的数据</p><p>int myInt = [intNumber intValue];</p><p><br /></p>","","","","","","","","45","0"),("463","UINavigationController组成部分是什么","","0","1434103575","1434103575","1","","<p>Navigation bar ,Navigation View,Navigation toolbar,</p><p><br /></p>","","正确","错误","","","","","72","0"),("464","UIScrollView是所有滑动试图的基类，提供了滚动功能,继承该类得类有：UITableview UITextView","","0","1434103591","1434103591","1","1","","","正确","错误","","","","","62","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("465","数组遍历的方法","","0","1434103602","1434103602","2","","<p>方法一</p><p> NSArray *arr = @[@&quot;12&quot;,@&quot;13&quot;,@&quot;14&quot;,@&quot;15&quot;];</p><p> &nbsp; &nbsp;for (int i = 0; i &lt; arr.count; i ++) {</p><p> &nbsp; &nbsp; &nbsp; &nbsp;NSLog(@&quot;arr[%d] = %@&quot;,i,arr[i]);</p><p> &nbsp; &nbsp;}</p><p>方法二</p><p>for (id obj in arr){</p><p>nslog(@“arr = %@“,obj);}</p><p>方法三</p><p>用nsenumerationcoucurrent &nbsp;顺序遍历 nsenumberationreverse &nbsp;倒序排列</p><p>[arr enumerateObjectsWithOptions:NSEnumerationConcurrent usingBlock:^(id obj, NSUInteger idx, BOOL *stop) {</p><p> &nbsp; &nbsp; &nbsp; &nbsp;NSLog(@&quot;obj1 = %@,%zi,%d&quot;,obj,idx,*stop);</p><p> &nbsp; &nbsp; &nbsp; &nbsp;if (1 == idx) {</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*stop = YES;</p><p> &nbsp; &nbsp; &nbsp; &nbsp;}</p><p> &nbsp; &nbsp;}];</p><p>[arr enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {</p><p> &nbsp; &nbsp; &nbsp; &nbsp;NSLog(@&quot;obj2 = %@,%zi,%d&quot;,obj,idx,*stop);</p><p> &nbsp; &nbsp; &nbsp; &nbsp;if (1 == idx) {</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*stop = YES;</p><p> &nbsp; &nbsp; &nbsp; &nbsp;}</p><p> &nbsp; &nbsp;}];</p><p><br /></p>","","","","","","","","45","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("466","在跳转语句中，对于break和continue说法正确的是","","0","1434103523","1434103523","1","1","<p>B switch也用 &nbsp; C 均无条件跳转 &nbsp;D goto跳转范围不够明确<br /></p>","","continue语句只应用于循环体中","break语句只应用于循环体中","break是无条件跳转语句，continue不是 ","break和continue的跳转范围不够明确，容易产生问题","","","35","1"),("467","UIScrollView使用场景:","","0","1434103647","1434103647","1","1,2,3","",""," 显示不下（单张大图）；"," 内容太多（图文混排），需要滚动；","滚动头条（图片）；相册等","","","","62","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("468","关于类的继承的方法不正确的是","","0","1434103578","1434103578","2","4","<p>D：父类对象不可以调用子类中的非私有方法<br /></p>","","子类可以将父类中所有的非私有的方法给继承过来，并且可以扩展自己的其他的方法","子类中可以省略掉继承父类中已经声明的方法只需要声明自己所扩展的方法","在子类中将父类中声明的方法实现了叫做方法的重写","在子类对象可以调用父类中的非私有方法，父类对象也可以调用子类中的非私有方法","","","37","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("469","UINavigationController内部机理是","","0","1434103633","1434103633","3","","<p>UINavigationController维护的是一堆VC对象的栈：先进后出，它必须有一个根VC，也就是第一个被包含的VC，push一个新VC的时候旧VC不会被释放，navi其实会给所有管辖内的VC保持retain，pop的时候，被pop的VC会在渐变动画过后立刻被销毁，无法pop根VC<br /></p>","","正确","错误","","","","","72","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("470","在do...while语句中，下列说法中正确的是","","0","1434103717","1434103717","1","2","<p>A do..while可以实现循环程序设计</p><p>C 循环条件不成立，至少也要执行一次循环体</p><p>D 不同</p><p><br /></p>","","用do...while语句可实现分支程序设计","当循环条件不成立时，至少也要执行一次循环体","当循环条件不成立时，一次也不执行循环体","do...while与while结构完全相同","","","35","1"),("471","给定NSString *s = @\"Testing 1 2 3”;  以下表示的结果为：［s substringToIndex:5];","","0","1434103655","1434103655","1","2","<p>数组下标从0开始。substringToIndex:5，是取下标0~4的内容</p>","","Test","Testi","Testin","ng 1 2 3","","","45","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("472","在UIScrollView中，假设其Scroll.view.size = CGSizeMake(320,480),下列哪个contentSize属性可以使其滚动？","","0","1434103726","1434103726","1","2,4","","","a contentSize =  CGSizeMake(300,480)     ","b  contentSize =  CGSizeMake(320,960) ","c  contentSize =  CGSizeMake(320,480)  ","d  contentSize =  CGSizeMake(640,480)   ","","","62","2"),("473","UINavigationController的出栈方式及其内存管理","","0","1434103742","1434103742","1","","<p>Pop就是navi的出栈，可以跳转到指定的视图，并且还会将栈中指定的视图上面所有的视图都给释放掉<br /></p>","","正确","错误","","","","","72","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("474","简述NSMutableArray和NSArray的区别？","","0","1434103830","1434103830","2","","<p>NSArray也是不可变的；换句话说，一旦创建一个NSArray，不能修改其内容。NSMutableArray类类似于NSArray，只不过多了一个优点，就是在创建之后可以修改其内容。<br /></p>","","","","","","","","45","0"),("475","UIPageControl中 可获取当前显示页的属性是：","","0","1434103833","1434103833","1","1","",""," currentPage  ","numberOfPages","","","","","62","0"),("476","下列语句中，执行跳转功能的语句是","","0","1434103803","1434103803","1","3","<p>for和while是循环语句 &nbsp; switch是多分支语句 continue才是跳转语句。<br /></p>","","for语句","while语句","continue语句","switch语句","","","35","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("641","swift中函数的格式","","0","1434107268","1434107268","1","","<p>func 函数名(行参列表) -&gt; 返回值类型{<br /> &nbsp; &nbsp;//函数体...<br />}<br /></p>","","正确","错误","","","","","28","0"),("477","do…while语句构成的循环，必须用break语句才能退出","","0","1434103884","1434103884","1","2","","","true","false","","","","","35","3"),("478","缩放相关的属性有：","","0","1434103869","1434103869","1","1,2,3,4","","","A minimumZoomScale","B maximumZoomScale","C zoomScale","D zoomBouncing(readonly)","","","62","2"),("479","break命令可以用来跳出当前的switch结构","","0","1434103943","1434103943","2","1","","","true","false","","","","","35","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("480","1，UITabBarController通常作为Window的根视图控制器吗？","","0","1434103914","1434103914","1","1","<p>A<br /></p>","","true","fault","","","","","78","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("481","关于class说法不正确的是","","0","1434103755","1434103755","2","3","<p>C：#importl会包含这个类的所有信息，包括实体变量和方法，@class只是指定要使用的类。<br /></p>","","对于循环依赖关系来说，比方A类引用B类，同时B类也引用A类，当程序运行时，编译会报错, 当使用@class在两个类相互声明，就不会出现编译报错。","class指令可以为我们指定要使用的类，而不用使用import语句，如果要引用类的实现部分，那么必须使用import语句。","@class会包含这个类的所有信息，包括实体变量和方法。","@class方式由于只需要只要被引用类（B类）的名称就可以了，而在实现类由于要用到被引用类中的实体变量和方法，所以需要使用#importl来包含被引用类的头文件。","","","37","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("482","navi的viewControllers属性的用处","","0","1434103940","1434103940","1","","<p>通过这个属性我们可以实现一次性替换整个navi的图层<br /></p>","","正确","错误","","","","","72","0"),("483","下面创建数组正确的是","","0","1434103862","1434103862","1","1,2,3,4","<p> C选项是创建一个空数组</p>","","NSArray *arr1=@[@\"1\",@\"2\",@\"3\",@\"4\"]","NSArray *arr2=[[NSArray alloc]initWithObjects:@\"5\",@\"6\",@\"8\", nil]","NSArray *arr3=[NSArray array]","NSArray *arr4=[[NSArray alloc]initWithArray:arr1]","","","45","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("484","请编写一个Object-C程序判断1—200中不能被3整除的数","","0","1434103965","1434103965","2","","<p>for (int i = 1; i &lt;= 200 ; i++) </p><p>{</p><p> &nbsp; if (i % 3 != 0 ) </p><p> &nbsp; { NSLog(@&quot;这个不能被3整除的数是：%d&quot;,i); }</p><p> &nbsp; else</p><p> &nbsp; {</p><p> &nbsp; &nbsp;}</p><p> }</p><p><br /></p>","","","","","","","","35","0"),("485","navi出栈的具体方式","","0","1434103975","1434103975","2","","<p>[self.navigationController popViewControllerAnimated:YES]; &nbsp;//回到上一个视图控制器</p><p>[self.navigationController popToViewController:viewController animated:YES]; &nbsp;//回到某一个视图控制器&quot;</p><p><br /></p>","","正确","错误","","","","","72","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("486","下面哪个是符合运算符？","","0","1434103809","1434103809","1","3","","","++ ","<=","+= ","&&","","","20","1"),("487","2，UITabBarController中的控制器之间一般是什么关系？","","0","1434103977","1434103977","1","1","<p>A<br /></p>","","平行关系","递进关系","叠加关系","层次关系","","","78","1"),("488","1，数据解析的基本概念是","","0","1434103971","1434103971","1","","<p>从事先规定好的格式中提取数据。<br /></p>","","","","","","","","98","0"),("489","2，解析的前提条件是什么？","","0","1434104088","1434104088","1","","<p>提前约定好格式，提供方按照格式提供数据，获取方按照格式获取数据。<br /></p>","","正确","错误","","","","","98","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("490","NSDictionary *dict = [NSDictionary dictionaryWithObject:@\"a value\" forKey:@\"aKey\"];NSLog(@\"%@\",[dict objectForKey:@\"aKey\"]);[dict release];控制台中打印的最后一条信息会是","","0","1434103982","1434103982","1","3","<p>在ARC中不需要手动释放内存</p>","","a value","aKey : a value","崩溃信息","a value : aKey","","","45","1"),("491","在Objective-C中，给一个类扩展一个其它方法有什么方式","","0","1434103983","1434103983","2","1,2","<p>Block，协议，拷贝不具备给一个类扩展其他方法。<br /></p>","","类别","继承","拷贝","Block","协议","","37","2"),("492","3，简述手动创建UITabBarController的过程？","","0","1434104147","1434104147","1","","","","","","","","","","78","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("493","在某些情况下，想要马上返回主页面应该怎样操作","","0","1434104097","1434104097","2","","<p>返回根页面vc用 ：[self.navigationController popToRootViewController］&quot;</p><p><br /></p>","","正确","错误","","","","","72","0"),("494","选择下面各逻辑表达式的值设a=3,b=4,c=5。 a+b>c && b= =c","","0","1434104041","1434104041","2","3","<p class=\"p1\"><span class=\"s1\"> C. &nbsp;a+b&gt;c</span>正确值为<span class=\"s1\">1</span>但<span class=\"s1\">b= =c</span>错误为<span class=\"s1\">0 &amp;&amp;</span>后一值为假一值为真，结果为假<span class=\"s1\"></span>所以为<span class=\"s1\">0</span></p><p><br /></p>","","3","4","","5","","","20","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("495","3，xml核心关心的是什么？","","0","1434104108","1434104108","1","3","","","视图","逻辑","数据","传输速度","","","98","1"),("496","4.XML的功能大概分为哪几类？","","0","1434104166","1434104166","1","","<p>数据交换，Web服务，内容管理，配置文件。<br /></p>","","","","","","","","98","0"),("497","自定义导航时定义一个其他的类的作用","","0","1434104164","1434104164","1","","<p>用来记录，比如记录导航器，记录根视图等等和作为父类存放其子类的一些共同的属性<br /></p>","","正确","错误","","","","","72","0"),("498","5，XML中没有子节点的节点又叫什么？","","0","1434104188","1434104188","1","2","","","根节点","叶子节点","父节点","孩子节点","","","98","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("499","4，UITabBarController是否有代理方法？","","0","1434104176","1434104176","1","","<p>有<br /></p>","","","","","","","","78","0"),("500","其中viewController的跳转方式是，push和pop的内存管理情况","","0","1434104191","1434104191","1","","<p>viewController的跳转方式是压栈和出栈，管理方式就是一个栈</p><p>当视图出栈的时候会释放掉出栈的视图，push的时候不会释放内存空间，相反是开辟内存空间</p><p><br /></p>","","正确","错误","","","","","72","0"),("501","6，节点用什么表示？","","0","1434104226","1434104226","1","","<p>&lt;&gt;<br /></p>","","","","","","","","98","0"),("502","7,节点书否可以相互嵌套？","","0","1434104240","1434104240","1","","<p>可以<br /></p>","","","","","","","","98","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("503","5，在UITabBarController中能添加UINavigationController吗？","","0","1434104232","1434104232","1","","<p>可以<br /></p>","","正确","错误","","","","","78","0"),("529","什么是数据持久化？","","0","1434104445","1434104445","1","","<p style=\"font-size:24px;font-family:simsun;margin-top:0px;margin-bottom:0px;\">数据持久化就是将内存中的数据模型转换为存储模型,以及将存储模型转换为内存中的数据模型的统称.</p><p><br /></p>","","正确","错误","","","","","86","0"),("505","如果要使类有多继承特性那么在oc当中有另外的处理方式","","0","1434104161","1434104161","1","3,4","<p>拷贝与继承不具备使类有多继承特性。<br /></p>","","拷贝","类别","继承","协议（代理）","","","37","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("507","9，iOS中SAX解析需要那个类，简述解析过程。","","0","1434104296","1434104296","1","","<p>NSXMLParser类，开始标签-&gt;取值-&gt;结束标签-&gt;取值。<br /></p>","","","","","","","","98","0"),("506","8，SAX采用什么解析方式？","","0","1434104256","1434104256","1","2","","","多行并行解析","逐行解析","随机解析	","DOM解析","","","98","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("508","假设ScrollView.size = CGSizeMake(320,480)，需要显示五张。每张图片image.size = CGSizeMake(320,480),( 即是每个图片显示完全) a.contentSize? b.假设在滑动的时候，获取 scroll.contentSize = CGPointMake(680,0),问当前显","","0","1434103942","1434103942","1","","<p>答案：a.contentSize = &nbsp;CGSizeMake(320*5,480)<br /> &nbsp; &nbsp; &nbsp; b.第三张 </p><p>解析：a.要显示五张图片，并且横向滑动，即使得contentSize的宽为320*5；高为480；</p><p> &nbsp; &nbsp; &nbsp; &nbsp;b.scroll.contentSize .x/320 = 3,即为 显示第三张<br /><br /><br /></p>","","正确","错误","","","","","62","0"),("509","作用域限定符为private的成员变量是不可以被继承的","","0","1434104288","1434104288","1","1","","","True","False","","","","","37","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("510","6，UITabBarController和UINavigationController有哪里不同点？","","0","1434104300","1434104300","1","","<p>UITabBarController里边的控制器存在平行关系，UINavigationController是用栈结构实现的中的控制器存在层次关系。<br /></p>","","正确","错误","","","","","78","0"),("511","DOM解析过程通过什么模型来实现的？","","0","1434104312","1434104312","1","1","","","树结构","图结构","静态链表","循环队列","","","98","1"),("512","⼦类不可以重写⽗类的方法","","0","1434104319","1434104319","1","2","<p>⼦类可以重写⽗类的方法<br /></p>","","True","False","","","","","37","3"),("513","类没有多继承","","0","1434104354","1434104354","1","1","","","True","False","","","","","37","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("514","Swift为整型计算提供了（?）个（?）开头的溢出运算符，能对超出取值范围的数值进行灵活处理","","0","1434104166","1434104166","1","3","","","5,@","5,&","4,@","4,&","","","20","1"),("515","7，UITabBarController的哪个属性用于储存该UITabBarController对象中的控制器？","","0","1434104332","1434104332","1","1","","","ViewControllers","style","rowHeight","separatorInset","","","78","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("516","现有如下集合，能准确删除“张三”的代码是：NSMutableDictionary * peoples=[NSMutableDictionary dictionaryWithObjectsAndKeys:@\"张三\",@\"左护法\",@\"李四\",@\"右使\",@\"唐sir\",@\"老大哥\", nil];正确答案是","","0","1434104126","1434104126","1","1","<p>字典是无序的，所以删除下标为0的C选项不对，B选项只删除了 Object没有删除key值,D是删除所有内容</p>","","[peoples removeObjectForKey:@\"左护法\"]","[peoples removeObject:@\"张三\"]","[peoples removeObjectAtIndex:0]","[peoples removeAllObjects]","","","45","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("517","继承性概念","","0","1434104369","1434104369","1","","<p>继承性是⾯面向对象的重要概念之一, 子类能够继承父类的某些方法和成员变量。 作用域限定符为private 的成员变量<br />是不可以被继承的。⼦类还可以重写⽗类的方法。<br /></p>","","正确","错误","","","","","37","0"),("518","Swift所支持的不同于其他语言的运算符","","0","1434104396","1434104396","1","3","","","!=","-=","&+","?","","","20","1"),("519","iOS数据持久化方式有哪几种（）","","0","1434104290","1434104290","1","1,2,3,4","","","对象归档","SQLite3","Core data","属性列表","","","86","2"),("532","手势识别器有几个子类","","0","1434104546","1434104546","1","3","","","5","6","7","8","","","58","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("533","怎样比较两个NSNumber对象大小","","0","1434104538","1434104538","2","","<p>可以转化成为基本数据类型比较，当然可以使用NSNumber的</p><p>方法比较，这就是对象的优势了，与比较相关方法有：</p><p>isEqualToNumber:和compare:。isEqualToNumber:只是比较</p><p>是否相对，compare:可以比较大小。</p><p>if ([intNumber isEqualToNumber: floatNumber] == YES) {</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>NSLog(@&quot;相等&quot;);</p><p>} else {</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>NSLog(@&quot;不相等&quot;);</p><p>}</p><p>if ([intNumber compare: myNumber] ==</p><p>NSOrderedAscending) {</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>NSLog(@&quot;第一个数小于第二个数&quot;);</p><p><br /></p>","","","","","","","","45","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("521","使用delegateDe的目的是什么呢","","0","1434104336","1434104336","1","2","","","为了提高类之间的耦合性","为了降低类之间的耦合性","为了提高类之间的内聚性","为了降低类之间的内聚性","","","58","1"),("522","什么是多态","","0","1434104469","1434104469","1","","<p>相同的对象在父类和子类中表现出不同的形态</p><p><br /></p>","","正确","错误","","","","","38","0"),("523","观察找出求余运算符的规律,不正确的是","","0","1434104445","1434104445","1","3","","","9 % 4 //1","-9 % 4 //-1","9 % -4 //-1","-9 % -4 //-1","","","20","1"),("524","1，UIevent大体分为哪几类？","","0","1434104465","1434104465","1","","<p>触摸事件、晃动事件、远程控制事件<br /></p>","","正确","错误","","","","","34","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("525","NSMutableString * str = [[NSMutableString alloc] initWithFormat:@\"123\"];NSLog(@\"str = %p\",str);[str appendFormat:@\"456\"];NSLog(@\"str = %p\",str);上面代码对字符串str进行拼接后，2次打印的地址是否相同：","","0","1434104402","1434104402","1","1","<p>字符串拼接，不改变它的地址</p>","","相同","不同","随机打印","有时相同，有时不同","","","45","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("526","Foundation框架中为什么使用NSNumber类？","","0","1434104514","1434104514","2","","<p>C语言中基本数据类型，int、char、float和double都不是类，不具有方法、成员变量和属性，以及面向对象的特征。为了实现“一切都是对象”的承诺，因此在Foundation框架中使用NSNumber类来封装这些数字类型。这样数字就具有了面向对象的基本特征了<br /></p>","","","","","","","","45","0"),("527","面向对象编程的核心思想是什么？","","0","1434104483","1434104483","1","2","","","低内聚，高耦合",".高内聚，低耦合","高内聚，高耦合","低内聚，低耦合","","","58","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("528","2,   触摸相关的方法在哪个类中？","","0","1434104509","1434104509","1","1","","","UIResponder","UIWindow","UIControl","UITouch","","","34","1"),("530","swift的赋值运算符有没有返回值，为什么","","0","1434104502","1434104502","1","","<p class=\"p1\">没有，为了安全</p><p><br /></p>","","","","","","","","20","0"),("531","多态可以用在","","0","1434104495","1434104495","1","1,2","","","参数","返回值类型","数组","方法","","","38","2"),("534","3,用于画图的方法是哪个？","","0","1434104547","1434104547","1","1","","","DrawRect","touchesBegan","touchesMoved","touchesEnded","","","34","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("535","用UIScollview代理方法实现图片的放大缩小","","0","1434104318","1434104318","1","","<p>答案：</p><p>-(void)viewDidLoad &nbsp;<br />{ &nbsp;<br /> &nbsp; &nbsp;ScrollView=[[UIScrollView alloc] initWithFrame:CGRectMake(0, 0, 320, 460)] ; &nbsp;<br /> &nbsp; &nbsp;ScrollView.delegate=self; &nbsp;<br /> &nbsp; &nbsp;ScrollView.contentSize=CGSizeMake(320, 460); &nbsp;<br /> &nbsp; &nbsp;ScrollView.maximumZoomScale=2; &nbsp;</p><p> &nbsp; //设置缩放的最大比例<br /> &nbsp; &nbsp;ScrollView.minimumZoomScale=0.5; </p><p> &nbsp; //设置缩放的最小比例 <br /> &nbsp; &nbsp;[self.view addSubview:ScrollView]; &nbsp;<br /> &nbsp; &nbsp; &nbsp; <br /> &nbsp; &nbsp;imageView=[[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 320, 460)] ; &nbsp;<br /> &nbsp; &nbsp;imageView.image=[UIImage imageNamed:@&quot;image1.jpg&quot;]; &nbsp;</p><p> &nbsp; //image1.jpg为自己放入工程的文件</p><p><br /> &nbsp; &nbsp;[ScrollView addSubview:imageView]; &nbsp;<br /> &nbsp; &nbsp;<br />} &nbsp;<br /> &nbsp; //代理中的三个方法</p><p><br />- (UIView *)viewForZoomingInScrollView:(UIScrollView *)scrollView &nbsp;<br />{ &nbsp;<br /> &nbsp; &nbsp;return imageView; &nbsp;<br />} &nbsp;<br />- (void)scrollViewWillBeginZooming:(UIScrollView *)scrollView withView:(UIView *)view &nbsp; <br />{ &nbsp;<br /> &nbsp; &nbsp;NSLog(@&quot;begin Zoom scrollview&quot;); &nbsp;<br />} &nbsp;<br />- (void)scrollViewDidEndZooming:(UIScrollView *)scrollView withView:(UIView *)view atScale:(CGFloat)scale &nbsp;<br />{ &nbsp;<br />NSLog(@&quot;did &nbsp;end &nbsp;EndZooming&quot;); &nbsp;<br />} &nbsp;<br /><br /><br /></p>","","正确","错误","","","","","62","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("536","范围运算符用来表示一个范围，有哪两种两种类型的范围运算符？它们的用途是什么？","","0","1434104559","1434104559","2","","<p class=\"p1\">1.闭合范围运算符：a…b,表示[a, b]，包含a和b</p><p class=\"p1\">2.半闭合范围运算符：a..&lt;b,表示[a, b)，包含a</p><p class=\"p1\">3.用途：一般用在swiftly的for循环中</p><p><br /></p>","","","","","","","","20","0"),("537","什么是沙盒？","","0","1434104558","1434104558","1","","<p style=\"font-size:24px;font-family:simsun;margin-top:0px;margin-bottom:0px;\">应用沙盒就是文件系统目录，与其他文件系统隔离。</p><p><br /></p>","","正确","错误","","","","","86","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("538","什么是字典？它的主要特点是什么？","","0","1434104581","1434104581","2","","<p>字典集合，它是由“键-值”对构成的集合。键集合不能重复，值集合没有特殊要求。键和值集合中的元素可以是任何对象，但是不能是nil</p><p>集合，与数组类一样，字典类也分为NSDictionary不可变字典和NSMutableDictionary可变字典。</p><p> 特点：</p><p> 1.本质键值对</p><p> 2，和数组的区别：数组是有序的，字典是无序的</p><p> 3，字典中不能有重复的key值，但是可以有重复的value值</p><p><br /></p>","","","","","","","","45","0"),("539","6，iOS中所有能响应事件的类都继承与哪个类？","","0","1434104584","1434104584","1","1","","","UIResponder","UIWindow","UIControl","UITouch","","","34","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("540","多态的好处","","0","1434104575","1434104575","1","1,2,3,4","","","设计更合理的代码","使代码更通用","增加程序的可维护性","增加程序的可扩展性","","","38","2"),("541","类的继承的属性","","0","1434104404","1434104404","1","","<p>1，子类可以将父类中所有的非私有的属性给继承过来，并且可以扩展自己的其他的属性<br />2，子类可以继承属性的set，get方法，但是不能继承系统为属性自动生成的带有_的成员变量<br /></p>","","","","","","","","37","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("542","常用的创建字典的方法","","0","1434104614","1434104614","2","","<p>创建不可变字典的方法1</p><p> &nbsp; &nbsp;NSArray *keyArray = @[@&quot;key1&quot;,@&quot;key2&quot;,@&quot;key3&quot;,@&quot;key4&quot;,@&quot;key5&quot;];</p><p> &nbsp; &nbsp;NSArray*valueArray = @[@&quot;value1&quot;,@&quot;value2&quot;,@&quot;value3&quot;,@&quot;value4&quot;,@&quot;value5&quot;];</p><p> &nbsp; &nbsp;NSDictionary *dict1 = [NSDictionary dictionaryWithObjects:valueArray forKeys:keyArray];</p><p>创建不可变字典的方法2</p><p> NSDictionary *dict2=[NSDictionary dictionaryWithObjectsAndKeys:@&quot;value1&quot;,@&quot;key1&quot;,@&quot;value2&quot;,@&quot;key2&quot;, nil];</p><p> &nbsp;</p><p>创建不可变字典的方法3</p><p>NSDictionary *dict3= [NSDictionary dictionary];//出创建一个空的字典</p><p>创建不可变字典的方法4</p><p> NSDictionary *dict4 = @{@&quot;key1&quot;:@&quot;value1&quot;,@&quot;key2&quot;:@&quot;value2&quot;,@&quot;key3&quot;:@&quot;value3”};</p><p><br /></p>","","","","","","","","45","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("543",".UIPinchGestureRecognizer是什么识别器，能识别什么样操作","","0","1434104572","1434104572","2","2","","","是长按手势识别器，能识别长按操作","是捏合手势识别器，能识别捏合操作","是轻扫手势识别器，能识别拖拽操作。","是轻拍手势识别器，能识别轻拍操作","","","58","1"),("544","7，UIWindow继承与UIControl吗？","","0","1434104615","1434104615","1","2","","","正确","错误","","","","","34","3"),("545","8，UIView和UIView的子类支持多点触摸吗？","","0","1434104651","1434104651","1","1","","","正确","错误","","","","","34","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("546","多态特性的展现","","0","1434104621","1434104621","1","1,2,3","","","可以用在方法的参数","可以用在方法的返回值类型","可以用在数组和集合上","可以创建对象","","","38","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("547","分析题：如何将字符串对象写入文件","","0","1434104596","1434104596","1","","<p style=\"font-size:24px;font-family:simsun;margin-top:0px;margin-bottom:0px;\">//获取所有的documents文件夹</p><p style=\"font-size:24px;font-family:simsun;margin-top:0px;margin-bottom:0px;\"> &nbsp; &nbsp;NSArray *documentList = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);</p><p style=\"font-size:24px;font-family:simsun;margin-top:0px;margin-bottom:0px;\"> &nbsp; &nbsp;//将最后的一个documents文件夹路径作为文件的存储目录</p><p style=\"font-size:24px;font-family:simsun;margin-top:0px;margin-bottom:0px;\"> &nbsp; &nbsp;NSString *documentPath = documentList.lastObject;</p><p style=\"font-size:24px;font-family:simsun;margin-top:0px;margin-bottom:0px;\"> &nbsp; &nbsp;NSString *strPath = [documentPath stringByAppendingString:@&quot;/text.txt&quot;];</p><p style=\"font-size:24px;font-family:simsun;margin-top:0px;margin-bottom:0px;\"> &nbsp; &nbsp;//构造字符串对象</p><p style=\"font-size:24px;font-family:simsun;margin-top:0px;margin-bottom:0px;\"> &nbsp; &nbsp;NSString *foo_str = @&quot;this is a test&quot;;</p><p style=\"font-size:24px;font-family:simsun;margin-top:0px;margin-bottom:0px;\"> &nbsp; &nbsp;//通过将writeToFile:atomically:encoding:error:方法发送给字符串对象完成字符串存储到文件内的功能</p><p style=\"font-size:24px;font-family:simsun;margin-top:0px;margin-bottom:0px;\"> &nbsp; &nbsp;[foo_str writeToFile:strPath atomically:YES encoding:NSUTF8StringEncoding error:nil];</p><p><br /></p>","","正确","错误","","","","","86","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("548","9，一个UIEvent能包含多个UITouch。","","0","1434104662","1434104662","1","1","","","正确","错误","","","","","34","3"),("549","transform是view的一个重要属性，它在矩阵层面上改变view的显示状态，能实现view的什么功能","","0","1434104649","1434104649","1","4","","","缩放","旋转","平移",".ABC","","","58","1"),("550","多态中父类的引用指向谁","","0","1434104664","1434104664","1","1,2","","","子类","本类","父类","其它","","","38","2"),("551","11，什么是第一响应者者。","","0","1434104675","1434104675","1","","<p>应用程序当前正在响应事件的控件就是第一响应者，一般都是输入控件。<br /></p>","","","","","","","","34","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("552","什么是耦合？","","0","1434104708","1434104708","1","","<p>耦合是衡量一个程序写的好坏的标准之一，<br />耦合是衡量模块与模块之间关联程度的指标<br /><br /><br /></p>","","","","","","","","58","0"),("553","要使用对象归档，对象必须实现什么协议（）","","0","1434104673","1434104673","1","1","","","NSCoding协议","NSCopying协议","NSMutableCopying协议","UITableViewDataSouce协议 ","","","86","1"),("554","创建UIxxxGestureRecognizer对象时，使用什么方法","","0","1434104737","1434104737","1","","<p>initWithTarget:action<br /><br /><br /></p>","","","","","","","","58","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("555","12，怎样理解事件的贯穿。","","0","1434104725","1434104725","1","","<p>当事件的第一响应者没有响应事件的时候，事件会传递给第一响应者的控制器或父控件一直传递下去如果最终没有响应者响应时间那么改事件将会被淹没。<br /></p>","","正确","错误","","","","","34","0"),("556","多态和继承的关系","","0","1434104707","1434104707","1","1","","","必须要有继承","不一定要有继承","两者相辅相成","没有继承","","","38","1"),("557","什么时候用delegate模式？","","0","1434104765","1434104765","2","","<p>当一个类的某些功能需要被别人来实现，但是既不明确是些什么功能，又不明确谁来实现这些功能的时候，委托模式就可以派上用场<br /></p>","","","","","","","","58","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("558","沙盒中的Document文件夹的作用是什么？","","0","1434104747","1434104747","1","","<p style=\"font-size:24px;font-family:simsun;margin-top:0px;margin-bottom:0px;\">存储用户数据和需要备份的信息</p><p><br /></p>","","正确","错误","","","","","86","0"),("559","如果我们想在程序中获取沙盒中的目录的路径，应该如何实现?","","0","1434104800","1434104800","1","","<p style=\"font-size:24px;font-family:simsun;margin-top:0px;margin-bottom:0px;\">通过代码 &nbsp; &nbsp;NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory,NSSearchPathDomainMask domainMask,BOOL expandTilde)来查找沙盒相对路径。</p><p><br /></p>","","正确","错误","","","","","86","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("653","JSON数据的解释正确的是","","0","1434107891","1434107891","1","4","","","大括号代表数组正确","冒号的左右两边分别为键和值（key:value）","数据和数据之间用;隔开","大括号代表字典","","","103","1"),("560","什么是复杂对象？","","0","1434104829","1434104829","1","","<p style=\"font-size:22.1px;font-family:simsun;margin-top:0px;margin-bottom:0px;\">1、在Foundation框架内不存在的数据类</p><p style=\"font-size:22.1px;font-family:simsun;margin-top:0px;margin-bottom:0px;\">2、无法在程序内通过writeToFile类型的方法写入到文件内</p><p style=\"font-size:22.1px;font-family:simsun;margin-top:0px;margin-bottom:0px;\">3、复杂对象至少包含一个实例对象</p><p><br /></p>","","正确","错误","","","","","86","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("561","1.Objective—C作为一种面向对象的编程语言，具有面向对象的特征，即为（）","","0","1434104815","1434104815","1","1,2,3","","","封装","继承","多态","","","","36","2"),("562","类是Objective—C中的一种重要数据类型，是组成Objective—C的基本要素。","","0","1434104872","1434104872","1","1","","","正确","错误","","","","","36","1"),("563","获取应用程序的tmp目录的方式为NSString* tempPath = NSTemporaryDirectory();","","0","1434104858","1434104858","2","1","","","true","false","","","","","86","3"),("564","多态的局限性","","0","1434104885","1434104885","2","","<p>父类类型的变量不能直接调用子类特有的方法，</p><p>如果必须要调用，则必须强制转换为子类特有的方法。</p><p><br /></p>","","","","","","","","38","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("565","下列说法不正确的是:","","0","1434104887","1434104887","1","4","","","self调用本类的方法","super调用父类的方法","id是一个指向任意类型的指针","#import是将一个文件的全部内容拷贝到当前文件","","","36","1"),("566","NSCoding协议声明了两个方法： -(void)encodeWithCoder:(NSCoder *)aCoder，是将对象写入到文件中。  -(id)initWithCoder:(NSCoder *)aDecoder，是将文件中数据读入到对象中。","","0","1434104914","1434104914","2","1","<p style=\"font-size:24px;font-family:simsun;margin-top:0px;margin-bottom:0px;\">要使用对象归档,对象必须实现NSCoding协议</p><p><br /></p>","","true","false","","","","","86","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("567","父类和子类之间的关系","","0","1434104920","1434104920","1","","<p>父类的引用可以指向子类的引用或者本类的引用。</p><p>父类的引用指向子类的对象，发送消息，调用的是子类对象的方法。</p><p>父类的引用指向本类的对象，发送消息，调用本类的方法。</p><p><br /></p>","","","","","","","","38","0"),("568","接口部分使用关键字@interface只要定义了哪些信息？","","0","1434104948","1434104948","1","1,2","",""," 类名、·继承的父类、"," 实现的协议、成员变量和方法等信息"," 方法的实现","","","","36","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("569","以下关于分类的说法，正确的是","","0","1434104835","1434104835","1","4","","","分类达不到比继承更好的效果","用来声明接口的","不支持扩展","允许向一个类中添加新的方法声明","","","40","1"),("570","实现部分使用关键字@implementation,只要实现了在接口部分定义的方法等信息","","0","1434104984","1434104984","1","1","","","正确","错误","","","","","36","3"),("571","尽量少用动态匹配的原因","","0","1434104974","1434104974","1","","<p>1，不知道id所指向的类分别有什么关系</p><p>2，在1的基础之上没有少分配内存空间</p><p><br /></p>","","","","","","","","38","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("572","方法类型标识符中,”-”，”+”分别代表什莫？","","0","1434105022","1434105022","1","","<p>”-”代表方法是实例方法。”+”代表的是类方法，需要用类名调用。<br /><br /><br /><br /><br /></p>","","正确","错误","","","","","36","0"),("573","成员变量的访问是通过读取方法（getter）和设定方法（setter）。","","0","1434105051","1434105051","1","1","","","正确","错误","","","","","36","3"),("574","以下能扩展类的方法是（）","","0","1434105018","1434105018","1","1,2,3,4","","","子类","类目","协议","延展","","","40","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("575","构造方法的实现几乎就是模式代码，基本写法是？","","0","1434105073","1434105073","1","","<p>self = [super init]; &nbsp;//来调用父类默认的构造方法<br /> if(self){<br /> &nbsp;…………<br /> }<br />return self;<br /></p>","","正确","错误","","","","","36","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("576","简单的写一个小程序，父类为person, 子类为worker,king","","0","1434105041","1434105041","2","","<p>#import &quot;Person.h&quot;</p><p>@interface Worker : Person</p><p>@end</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </p><p>#import &quot;Person.h&quot;</p><p>@interface King : Person</p><p>@end</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>#import &quot;Worker.h&quot;</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </p><p>#import &quot;King.h&quot;</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </p><p>Worker *worker = [[Worker alloc] init];</p><p> worker.name = @&quot;工人&quot;;</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </p><p>[worker work];</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>King *king = [[King alloc]init];</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>king.name = @&quot;国王&quot;;</p><p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </p><p>[king work];</p><p><br /></p>","","","","","","","","38","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("640","下列那一项不占用内存空间（）","","0","1434106661","1434106661","2","4","<p>assign是基本数据类型的参数，没有内存空间<br /></p>","","retain","copy","strong","assign","","","42","1"),("577","@interface与@protocal的区别是什么","","0","1434105097","1434105097","1","3","","","委托与实现","父类与子类","非正式协议与正式协议","代理与实现","","","40","1"),("578","下列（ ）的作用域限定的实力变量，只能在这个类中才可以访问？","","0","1434105100","1434105100","1","3","",""," @protected"," @public"," @private","","","","36","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("579","UILable 中如何实现多行显示？","","0","1434105059","1434105059","1","","<p>代码如下：UILabel *lable=[[UILabel alloc]init];</p><p> &nbsp; &nbsp; &nbsp; &nbsp;CGSize size=CGSizeMake(100, 50);</p><p> &nbsp; &nbsp; &nbsp; &nbsp;lable.frame=CGRectMake(100, 100, size.width, size.height);</p><p> &nbsp; &nbsp; &nbsp; &nbsp;lable.text=@&quot;lable&quot;;</p><p> &nbsp; &nbsp; &nbsp; &nbsp;lable.font=[UIFont systemFontOfSize:10];</p><p> &nbsp; &nbsp; &nbsp; &nbsp;label.numberOfLines = 0; //label.numberOfLines 如果要多行显示，它的值必须为0</p><p> &nbsp; &nbsp; &nbsp; &nbsp;lable.lineBreakMode=NSLineBreakByWordWrapping;</p><p> &nbsp; &nbsp; &nbsp; &nbsp;[label sizeToFit];//让label随着text换行而自适应加高，不改变宽度</p><p><br /></p>","","正确","错误","","","","","18","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("580","作用域限定只能修饰的实例成员变量，不能修饰类变量，更不能修饰方法。","","0","1434105146","1434105146","1","1","","","正确","错误","","","","","36","3"),("581","在iOS中实现响应按钮点击事件有哪些方法？","","0","1434105161","1434105161","1","","<p>代理和addTarget事件<br /></p>","","正确","错误","","","","","18","0"),("582","以下对类的描述正确的是","","0","1434105170","1434105170","1","1","","","类的接口部分可以包含实例变量、属性和方法","可以把声明和实现都放到.h文件中","一对文件（Person.h Person.m）只能定义一个类","类比较抽象，对象比较具体","","","36","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("583","在OC协议中，用于绘制图形的协议是 ","","0","1434105146","1434105146","1","3","","","NSCoping","Required","Graphics","Ellipse","","","40","1"),("584","在textField中如何让程序运行后就出现光标？","","0","1434105211","1434105211","1","","<p>[_textField becomeFirstResponder] 就可以实现<br /></p>","","正确","错误","","","","","18","0"),("585","Objective-C中可以采用多重继承和多个协议 ","","0","1434105229","1434105229","1","2","<p>解释：OC中不可以多重继承，可以采用多个协议<br /></p>","","true","false","","","","","40","3"),("586","Category（分类）不需要使用子类机制，并且在类实现的文件中的同一个名字下定义这些方法 ","","0","1434105280","1434105280","1","1","","","true","false","","","","","40","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("587","协议既定义方法的列表，然后负责实现方法  ","","0","1434105307","1434105307","1","2","<p>解释： 协议只是定义方法的列表，不负责实现方法，协议的目的就是为了让别的类来实现<br /></p>","","true","false","","","","","40","3"),("588","设置textField的提示文字为（）","","0","1434105278","1434105278","1","1","","","textField.placeholder","textField.text","textField.content","textField.name","","","18","1"),("589","Category是什么？重写一个类的方式用继承好还是分类好？为什么？","","0","1434105355","1434105355","1","","<p>答：Category是类别，一般情况用分类好，用Category去重写类的方法，仅对本Category有效，不会影响到其他类与原有类的关系。<br /><br /><br /></p>","","","","","","","","40","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("590","类实例（成员）变量的@protected,@private,@public声明各有什么含义？","","0","1434105396","1434105396","1","","<p>答：@protected：受保护的，该实例变量只能在该类和其子类内访问，其他类内不能访问。<br /><br />@private：私有的，该实例变量只能在该类内访问，其他类内不能访问。<br /><br />@public：共有的，该实例变量谁都可以访问。<br /></p>","","","","","","","","40","0"),("591","textField结束编辑是用resignFirstResponder来实现的","","0","1434105378","1434105378","1","1","","","true","false","","","","","18","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("592","类别和类扩展的区别","","0","1434105416","1434105416","1","","<p>答：category和extensions的不同在于 后者可以添加属性。另外后者添加的方法是必须要实现的。<br />extensions可以认为是一个私有的Category。<br /><br /><br /></p>","","","","","","","","40","0"),("593","下面哪些是 Swift常用的数据类型","","0","1434105297","1434105297","1","1,2,4","<p style=\"font-size:18px;font-family:&#39;heiti sc light&#39;;margin-top:0px;margin-bottom:0px;\">NSString 是OC中的数据类型</p><p><br /></p>","","Int ","float","NSString","Bool","","","17","2"),("594","[textField isEqual:_textField1] 中只会判断值是否相等","","0","1434105418","1434105418","1","1","","","true","false","","","","","18","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("595","下面表述错误的有","","0","1434105460","1434105460","1","1,3","<p style=\"font-size:18px;font-family:&#39;heiti sc light&#39;;margin-top:0px;margin-bottom:0px;\">十进制没有前缀，八进制的前缀为0o;</p><p><br /></p>","","十进制，前缀为0D","二进制数，前缀为0b。","八进制数，前缀为0C","十六进制，前缀为0X","","","17","2"),("596","Swift提供了（）位整数。","","0","1434105538","1434105538","1","1,2,3","<p style=\"font-size:18px;font-family:&#39;heiti sc light&#39;;margin-top:0px;margin-bottom:0px;\">没有48位的</p><p><br /></p>","","8","16","32","48","","","17","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("597","OC管理内存机制为引用计数机制，当retainCount==0时内存会被收回，当retainCount>0的时候不会收回（）","","0","1434105506","1434105506","1","1","","","true","false","","","","","42","3"),("598","Objective-C是一种面向对象的C语言","","0","1434105408","1434105408","1","1","","","ture","false","","","","","32","3"),("599","下面语句正确的是（）","","0","1434105593","1434105593","1","1,2","<p style=\"text-indent:-29.8px;font-family:&#39;heiti sc light&#39;;margin-top:0px;margin-bottom:0px;margin-left:29.8px;\"><span style=\"font-family:menlo;\">AB</span>超出了存储范围</p><p><br /></p>","","let num1:UInt8 = -1","let num2:Int8 = Int8.max + 1","var myVar = 10","var int : Int = 10 ","","","17","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("600","创建对象的方式有alloc和new两种，使其引用计数为1（）","","0","1434105628","1434105628","1","2","<p>copy也可以用来创建对象使其引用计数为1<br /></p>","","true","false","","","","","42","3"),("601","swift的容器类型包括","","0","1434105629","1434105629","1","1,2,3","","","数组","字典","元组","数据","","","23","2"),("602","Swift提供的比较字符串值的方法","","0","1434105667","1434105667","1","4","","","字符串相等","前缀相等","后缀相等","以上三种","","","17","1"),("603","在OC当中属性代替对成员变量访问getter方法和setter方法","","0","1434105661","1434105661","1","1","","","正确","错误","","","","","32","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("604","下面哪些方法会使引用计数+1（）","","0","1434105671","1434105671","1","1,2,4","<p>copy 不会使retainCount + 1<br /></p>","","retain","alloc","copy","new","","","42","2"),("605","元组的使用细节","","0","1434105721","1434105721","1","1,2,4","","","可以用多个变量接收数据","可以将元素分别赋值给多个变量","只能用一个变量接收数据","可以使用下划线忽略某个元素的值,取出其他元素值","","","23","2"),("606","下面哪些方法会使引用计数-1（）","","0","1434105753","1434105753","1","1,2","","","release","autorelease","dealloc","init","","","42","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("607","在OC中创建一协议，会生成其接口文件和实现文件，接口文件中声明的方法要在实现文件中实现","","0","1434105742","1434105742","2","2","<p style=\"font-size:10px;font-family:helvetica;-webkit-text-stroke-color:#000000;-webkit-text-stroke-width:initial;margin-top:0px;margin-bottom:0px;\">OC中创建协议只有接口部分没有实现部分，即只有.h文件没有.m文件</p><p><br /></p>","","ture","false","","","","","32","3"),("608","Swift的数据类型首字母都大写，如：Int，Float（true）；","","0","1434105726","1434105726","1","1","","","true","flase","","","","","17","3"),("609","命名型类型包括","","0","1434105802","1434105802","1","1,2,3,4","","","类","结构体","枚举","协议","","","23","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("610","OC中分类是类似与继承机制的，通过分类能够扩展父类的功能","","0","1434105822","1434105822","1","1","","","ture","false","","","","","32","3"),("611","一般登陆界面具有的特点","","0","1434105782","1434105782","1","","<p> &nbsp; 答： &nbsp; 每个UITextField都有一个UILabel修饰，左边是一个UILabel，右边是一个UITextField。下边还有一个UIButton，用于进入下一个页面。<br />解析：登陆界面至少应该包括：输入账号，密码的UITextField。还需要一个UIButton用于输入结束后点击登录。<br /></p>","","正确","错误","","","","","24","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("612","自定义视图都有哪些要点","","0","1434105870","1434105870","1","","<p>答：<br />1. 先创建一个UIView的子类；<br />2. 在类的初始化方法中添加子视图；<br />3. 在类的.h中提供一些接口（方法），便于外界操作视图。<br />3）添加一个子视图Lable。<br /></p>","","正确","错误","","","","","24","0"),("613","下列哪一项不是autoreleasepool的使用场景（）","","0","1434105809","1434105809","1","4","<p>在头文件中不会使用到autoreleasepool<br /></p>","","在main函数中使用","在分线程中使用","在瞬间创建大量的自动释放对象的时候使用","在头文件中使用","","","42","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("614","解包的用法","","0","1434105851","1434105851","1","","<p>可选类型在每次访问的时候都会提取并检测它的值是否存在，但有的时候根据程序结构就可以判断可选量在首次赋值后 必然存在值,这个时候，就不需要每次验证值是否存在，</p><p>如果确定一个可选量的值一定存在那么使用!进行解包获取它的值,或者使用Optional Binding。</p><p><br /></p>","","正确","错误","","","","","23","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("615","在OC中#import表示将该文件的信息导入到程序中，是#include改进命令，它可以防止头文件重复包含的问题都可以用#include替换","","0","1434105860","1434105860","1","2","<p style=\"font-size:10px;font-family:helvetica;-webkit-text-stroke-color:#000000;-webkit-text-stroke-width:initial;margin-top:0px;margin-bottom:0px;\">不是所有的由#import导入的系统文件都可以由#include替换。</p><p><br /></p>","","ture","false","","","","","32","3"),("616","每种数据类型的存储范围都是无限大得，可以存储任何数","","0","1434105842","1434105842","1","2","<p style=\"text-indent:-29.8px;font-family:&#39;heiti sc light&#39;;margin-top:0px;margin-bottom:0px;margin-left:29.8px;\">存储范围有限的</p><p><br /></p>","","true","flase","","","","","17","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("617","iOS程序启动流程","","0","1434105890","1434105890","1","","<p>答：Main函数是程序的入口。<br />解析：MAC 和IOS的程序入口都是main函数。<br /></p>","","正确","错误","","","","","24","0"),("618","浮点数可以用十进制和十六进制表示","","0","1434105922","1434105922","1","1","","","true","flase","","","","","17","3"),("619","NSLog不仅会输出一个字符串而且还会将输出字符串的时间等信息输出","","0","1434105921","1434105921","1","1","","","ture","false","","","","","32","0"),("620","Int\\Uint的长度和当前系统平台一样","","0","1434105950","1434105950","1","1","","","true","flase","","","","","17","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("621","隐式解包的可选类型","","0","1434105919","1434105919","1","","<p>可以把隐式解包当成自动解包的可选类型。即不是每次使用的时候在变量、常量后面加！，而是直接定义的时候加！这些可选量定义为隐式解包的可选量隐式解包的可选量的声明格式为：在希望为可选的类型名称后面，用！代替？ 。</p><p>隐式解包的可选类型主要用在一个变量／常量的定义瞬间完成之后值一定会存在的情况。主要用在类的出事化的过程中。</p><p><br /></p>","","正确","错误","","","","","23","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("622","UIApplicationMain函数有什么功能","","0","1434105945","1434105945","1","","<p>1，创建应用程序（UIApplication）实例;<br />2, &nbsp;创建应用程序代理实例；<br />3，建立事件循环。<br />解析：这个函数实在main函数中被调用<br /></p>","","正确","错误","","","","","24","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("623","简述应用程序代理：","","0","1434105983","1434105983","1","","<p> &nbsp; &nbsp;1，应用程序代理，主要检测应用程序的状态并做出相应的处理。<br /> &nbsp; &nbsp;2，应用程序的状态有很多，比如进入程序，这记性程序，进入后台运行，内存警告等等。<br /> &nbsp; &nbsp;3， 接受了应用程序代理协议的对象都可以成为应用程序代理。<br /> &nbsp; 4，当应用程序先的某种状态触发，就会执行相应的代理方法。<br />解析：UIApplicationDelegate 这个代理协议中有许多有关程序状态的方法。这些方法由应用程序代理实现。由UIApplication的对象调用。<br /></p>","","正确","错误","","","","","24","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("624","两个数据类型不同的值不能直接进行运算","","0","1434105979","1434105979","1","1","","","true","flase","","","","","17","3"),("625","元组的使用细节","","0","1434105984","1434105984","1","","<p>1.可以省略元素的名称</p><p> 2.可以明确指定元素的类型<br /></p>","","","","","","","","23","0"),("626","下列那种方法能使引用计数立即减1（）","","0","1434105900","1434105900","1","1","<p>release使引用计数立即-1，autorelease为自动释放，等到不使用时再-1 <br /><br /></p>","","release","autorelease","dealloc","new","","","42","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("627","可选类型怎么绑定","","0","1434106010","1434106010","1","","<p>可以通过绑定一个可选类型到一个常量或者变量中，不仅可以检测可选类型是否含有值，还可以在之后通过这个临时变量或者常量访问他的值。</p><p>通过一个操作，就可以在If 和while当中使用绑定来检查可选当中的值，同时也可以将可选的值放到变量或者常量当中。<br /></p>","","","","","","","","23","0"),("628","  下面哪一个是程序的入口函数","","0","1434106004","1434106004","1","1","","","main函数","NSLog函数","Scanf","Printf.","","","24","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("629","叙述一下内存管理的基本原则","","0","1434106031","1434106031","2","","<p>对自己拥有的对象负责，凡是你通过retain,alloc,copy等手段获得了所有权的对象，都必须在你不再使用的时候，由你来调用release，autorelease等手段来释放对它的所有权。 &nbsp; &nbsp; &nbsp;在一定的代码段内，对同一个对象所做的copy，alloc和retain的操作次数应当与release和autorelease操作的次数相等。<br /></p>","","正确","错误","","","","","42","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("630","Objective-C声明一个类所要用到的编译指令是","","0","1434106061","1434106061","1","1","<p>解析：B项是代理编译指令 C项是方法实现指令 D创建一个释放池<br /></p>","","@interface SomeClass ","@protocol SomeClass ","@implementation SomeClass "," @autorelease SomeClass","","","24","1"),("631","简述copy和retain的区别","","0","1434106061","1434106061","2","","<p>copy是内容拷贝，retain是指针拷贝。copy其实是建立了一个相同的对象，其对象地址和原来的地址不同，retain则不是，retain相当于把指针拷贝了一次，地址仍然相同。只有接受了NSCopying协议的对象才能使用copy。<br /></p>","","","","","","","","42","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("632","下列哪些是OC中文件的扩展名？","","0","1434105967","1434105967","3","2,3,4","<p style=\"font-size:10px;font-family:helvetica;-webkit-text-stroke-color:#000000;-webkit-text-stroke-width:initial;margin-top:0px;margin-bottom:0px;\">A为Java中文件的扩展 &nbsp;B为OC中头文件 C为OC中C语言源程序文件 D为OC中objective-C++源程序文件</p><p><br /></p>","",".jar",".h ",".c",".mm","","","32","2"),("633","使用protocol时，声明一组可选择实现与否的函数，需要在声明的前一行加上：","","0","1434106115","1434106115","1","2","",""," @required "," @optional "," @interface ","@protoco","","","24","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("638","以下能扩展类的方法的是","","0","1434106277","1434106277","2","1,2,3,4","<p style=\"font-size:10px;font-family:helvetica;-webkit-text-stroke-color:#000000;-webkit-text-stroke-width:initial;margin-top:0px;margin-bottom:0px;\">均能扩展类的方法</p><p><br /></p>","","子类 ","类目","协议"," 延展","","","32","2"),("634","简述什么是内存泄露，内存泄露会产生什么后果？","","0","1434106121","1434106121","2","","<p>自己申请的内存，没有释放；会使内存中存在很多的垃圾，浪费不必要的内存<br /></p>","","正确","错误","","","","","42","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("636","以下哪些是obj-c的优点","","0","1434106222","1434106222","1","1,2","<p>解析：C，D是缺点。<br /><br /><br /></p>","","动态识别","指标计算 ","不支持运算符重载","不支持多重继承","","","24","2"),("637","下列哪项是OC语言中定义一字符串的方式","","0","1434106137","1434106137","2","4","<p style=\"font-size:10px;font-family:helvetica;-webkit-text-stroke-color:#000000;-webkit-text-stroke-width:initial;margin-top:0px;margin-bottom:0px;\">OC中定义字符串前要加@</p><p><br /></p>","","NSString myString = “abc” ","NSString *myString = “abc”  ","NSString *myString = (abc) ","NSString *myString = @“abc”","","","32","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("639","自己编写一个Hello World应用程序","","0","1434106389","1434106389","1","","<p style=\"font-size:10px;font-family:helvetica;-webkit-text-stroke-color:#000000;-webkit-text-stroke-width:initial;margin-top:0px;margin-bottom:0px;\">NSlog（@“Hello，Wold！”）；</p><p><br /></p>","","","","","","","","32","0"),("642","如果一个函数没有形参那么函数名后边的小括号能否省略","","0","1434107290","1434107290","1","2","","","正确","错误","","","","","28","3"),("643","外部参数名的主要作用是","","0","1434107308","1434107308","1","1","","","为了在调用函数式提醒每个参数的含义","为了代码执行速度","为了取代内部参数名","为了为函数起别名","","","28","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("644","一旦定义外部参数名，在调用函数的时候是否需要加上","","0","1434107333","1434107333","1","","<p>要加上<br /><br /><br /></p>","","正确","错误","","","","","28","0"),("645","定义输入输出参数是用那个关键字","","0","1434107344","1434107344","1","1","","","inout","var","func","content","","","28","1"),("646","当使用输入输出参数时必须在实参前加什么符号","","0","1434107368","1434107368","1","","<p>&amp;<br /></p>","","正确","错误","","","","","28","0"),("647","哪些数据不能当做为输入输出参数","","0","1434107379","1434107379","1","","<p>常量或者字面量<br /></p>","","正确","错误","","","","","28","0"),("648","Swift中生否支持函数嵌套","","0","1434107387","1434107387","1","1","","","正确","错误","","","","","28","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("649","闭包的表达式一般形式","","0","1434107396","1434107396","1","","<p>{(参数列表) -&gt; 返回类型 in 闭包函数体}<br /></p>","","正确","错误","","","","","28","0"),("650","如果闭包返回值只有一个那么in前的()能否省略？","","0","1434107411","1434107411","1","1","","","正确","错误","","","","","28","3"),("651","如果将闭包赋给两个不同的常量或变量，那么","","0","1434107424","1434107424","1","1","","","两个值都不会指向闭包","两个值都会指向闭包","第一个值会指向闭包","第二个值会指向闭包","","","28","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("652","以下对于JSON的描述正确的是","","0","1434107829","1434107829","1","2","<p>A 正确的是JavaScript Object Natation </p><p>C JSON值可以是数字、字符串、逻辑值、数组、对象或者null</p><p>D JSON 可以将 JavaScript 对象中表示的一组数据转换为字符串</p><p><br /></p>","","Javascripe Object Nolic","作为一种轻量级的数据交换格式，正在逐步取代xml","JSON值只能是数字或者是字符串","JSON 可以将 JavaScript 对象中表示的一组字符串转换为数据","","","103","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("654","对于JSON解析，解释错误的是","","0","1434107943","1434107943","1","4","","","IOS5 开始，APPLE就提供了对JSON的原生支持","为了兼容以前的版本，仍然可以使用第三方库来解析JSON","第三方JSON解析需要导入数据包","JSON数据和OC对象之间不能够互相转换","","","103","1"),("655","JSON的数据结构中数组是以”[”开始，以”]”结束，中间是数据，数据以”;”分隔","","0","1434107989","1434107989","1","2","<p>数据是以”,”分隔的<br /></p>","","true","false","","","","","103","3"),("656","JSON第三方框架中，TouchJSON、SBJson、JSONKit性能从左到右，越来越差","","0","1434108018","1434108018","1","2","<p>JSONKit、SBJson、TouchJSON性能从左到右越来越差<br /></p>","","true","false","","","","","103","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("657","苹果原生（自带）解析方案：NSJSONSerialization的性能最好","","0","1434108039","1434108039","2","1","","","true","false","","","","","103","3"),("658","JSON的作用有什么","","0","1434108066","1434108066","1","","<p>数据交换、内容管理和配置文件<br /></p>","","","","","","","","103","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("659","xml和JSON的优缺点有哪些","","0","1434108086","1434108086","3","","<p>xml &nbsp;</p><p><br /></p><p>优点：</p><p>A.格式统一，符合标准；</p><p>B.容易与其他系统进行远程交互，数据共享比较方便。</p><p><br /></p><p>缺点：</p><p>A.XML文件庞大，文件格式复杂，传输占带宽；</p><p>B.服务器端和客户端都需要花费大量代码来解析XML，导致服务器端和客户端代码变得异常复杂且不易维护；</p><p>C.客户端不同浏览器之间解析XML的方式不一致，需要重复编写很多代码；</p><p>D.服务器端和客户端解析XML花费较多的资源和时间。</p><p><br /></p><p>JSON &nbsp;优点：</p><p><br /></p><p>A.数据格式比较简单，易于读写，格式都是压缩的，占用带宽小；</p><p>B.易于解析，客户端JavaScript可以简单的通过eval_r()进行JSON数据的读取；</p><p>C.支持多种语言，包括ActionScript, C, C#, ColdFusion, Java, JavaScript, Perl, PHP, Python, Ruby等服务器端语言，便于服务器端的解析；</p><p>D.在PHP世界，已经有PHP-JSON和JSON-PHP出现了，偏于PHP序列化后的程序直接调用，PHP服务器端的对象、数组等能直接生成JSON格式，便于客户端的访问提取；</p><p>E.因为JSON格式能直接为服务器端代码使用，大大简化了服务器端和客户端的代码开发量，且完成任务不变，并且易于维护。</p><p><br /></p><p>缺点：</p><p><br /></p><p>A.没有XML格式这么推广的深入人心和喜用广泛，没有XML那么通用性；</p><p>B.JSON格式目前在Web Service中推广还属于初级阶段。</p><p><br /></p>","","正确","错误","","","","","103","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("660","在JAVA中，使用类的步骤包括以下三步，1）定义类		2）创建类的对象	  3）访问对象的属性和方法，他们的先后顺序是（）。","","0","1434424299","1434424299","1","2","","","213	","123","321","231","","","143","1"),("661","在JAVA中，Scanner类提供从控制台获取键盘输入的功能，下列语句（）能够正确实例化Scanner类的对象，用于获得键盘输入的数据。","","0","1434425613","1434425613","1","2","","","Scanner input=new Scanner(System.out);","Scanner input=new Scanner(System.in);","Scanner input=new Scanner(System);","Scanner input=new Scanner();","","","143","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("662","下列关于构造方法的调用正确的是","","0","1434425714","1434425714","1","3","","","按照一般方法调用","由用户直接调用","只能通过new自动调用","被系统调用","","","143","1"),("663","在Java中，下面关于构造方法的说法错误的是()","","0","1434426344","1434426344","1","2","","","当一个类未定义构造方法时，java虚拟机便提供一个默认构造方法。","构造方法不能够被重载","构造方法可以接受参数  ","当类的父类只有一个带参数的构造方法时，这个类必须提供自定义的构造方法","","","143","1"),("664","java中通过对象访问方法使用点运算符","","0","1434426613","1434426613","1","1","","","正确","错误","","","","","143","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("665","java中一个类只能创建一个对象","","0","1434426679","1434426679","1","2","","","正确","错误","","","","","143","3"),("666","java中类与对象之间是抽象与具体的关系。","","0","1434426717","1434426717","1","1","","","正确","错误","","","","","143","3"),("667","在JAVA中，定义带参数的方法时，参数可以为一个或多个，多个参数之间使用（）符号进行分隔。","","0","1434426830","1434426830","1","2","","","分号","逗号","空格","连字符","","","144","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("668","类定义 class AA {  static void Show( )  { System.out.println(“我喜欢Java!”); }  } class BB {   void Show( )  { System.out.println(“我喜欢C++!”); }  }  若已经使用AA类创建对象a和BB类创建对象b，调用正确的是","","0","1434426922","1434426922","1","3","","","a.show();b.show();","AA.show();BB.show();","AA.show();b.show();","a.show();BB.show();","","","144","1"),("669","在Java中，一个类可同时定义许多同名的方法，这些方法的形式参数的个数、类型或顺序各不相同，传回的值也可以不相同。这种面向对象程序特性称为","","0","1434427239","1434427239","1","3","","","隐藏","覆盖","重载","java不支持此特性","","","144","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("670"," 以下描述正确的有","","0","1434427610","1434427610","1","2","","","方法的重写应用在一个类的内部","方法的重载与返回值类型无关","构造方法不能重载","构造方法可以重写","","","144","1"),("671","在Java中，下面对于构造函数的描述正确的是","","0","1434427842","1434427842","1","4","","","类必须显示定义构造函数"," 构造函数的返回类型是void"," 构造函数和类有相同的名称，并且不能带任何参数","一个类可以定义多个构造函数","","","144","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("672","在Java中，以下代码(  )正确地创建了一个InputStreamReader对象。","","0","1434427952","1434427952","1","1","",""," InuptStreamReader(new FileInputStream(“1.dat”));","InuptStreamReader(new FileReader(“1.dat”));","InuptStreamReader(new BufferReader(“1.dat”));","InuptStreamReader (“1.dat”);","","","144","1"),("673","java中定义方法分为静态方法和非静态方法。","","0","1434428619","1434428619","1","1","","","正确","错误","","","","","144","3"),("674","java中字符串比较使用equals方法","","0","1434428695","1434428695","1","1","","","正确","错误","","","","","145","3"),("675","String类位于java.lang中","","0","1434429133","1434429133","1","1","","","正确","错误","","","","","145","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("676","常用的字符串处理函数如下","","0","1434429223","1434429223","1","1,2,4","","","length","equals","max","toLowerCase()","","","145","2"),("677","java中字符串连接使用","","0","1434429320","1434429320","1","1,2","","","+","使用String类的concat()方法","使用connection()方法","不能连接字符串","","","145","2"),("678","java中public String substring(int index)方法实现的功能是","","0","1434429418","1434429418","1","1","","","提取子字符串","翻转字符串","查找字符的索引值","查找指定字符","","","145","1"),("679","String类提供了split()方法，将一个字符串分割为子字符串，结果作为字符串数组返回","","0","1434429512","1434429512","1","1","","","正确","错误","","","","","145","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("680","StringBuffer是String类的父类","","0","1434429543","1434429543","1","2","","","正确","错误","","","","","145","3"),("681","java中public StringBuffer deleteCharAt(int index) 该方法的作用是删除指定位置的字符，然后将剩余的内容形成新的字符串。","","0","1434429577","1434429577","1","1","","","正确","错误","","","","","145","3"),("682","封装的好处如下","","0","1434429687","1434429687","1","1,2,3","","","隐藏实现细节","代码可扩展性强","只能通过指定方法访问数据","方便查看代码","","","146","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("683","下列选项中关于Java中封装的说法正确的是()","","0","1434429862","1434429862","1","2","","","封装就是为私有属性或公有属性提供公有的访问方法","属性的访问方法包括setter方法和getter方法","seter方法用于取值","geter方法用于赋值","","","146","1"),("684","关于方法重载说法正确的是","","0","1434430004","1434430004","1","1,2,3,4","","","方法名相同","参数列表不同","与返回值无关","与访问修饰符无关","","","146","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("685","下列选项中关于Java中this关键字的说法错误的是","","0","1434430136","1434430136","1","2","",""," this是在对象内部指代对象自身引用"," this是在对象内部指代对象自身引用","this只和特定的对象关联，而不和类关联","同一个类的不同对象有不同的this","","","146","1"),("686","在java中属于重载的是","","0","1434430212","1434430212","1","1,3","","","int f1(){} int f1(int a){}","int f1(int a){} void f1(int a){}","int f1(int a){} void f1(int a){}","int f1(int a){} void f1(int a){}","","","146","2"),("687","构造方法可以初始化一个或多个成员变量","","0","1434430373","1434430373","1","1","","","正确","错误","","","","","146","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("688","getter和setter方法只能针对一个成员变量进行封装，可以设置读写功能","","0","1434430423","1434430423","1","1","","","正确","错误","","","","","146","3"),("689","下列选项中关于Java中super关键字的说法错误的是()．","","0","1434430489","1434430489","1","1","","","super关键字是在于类对象内部指代其父类对象的引用"," super关键字不仅可以指代子类的直接父类、还可以指代父类的父类","子类可以通过super关键字调用父类的方法","子类可以通过super关键字调用父类的属性","","","147","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("690","在java中，下面关于抽象类的描述正确的是（）","","0","1434430587","1434430587","1","2,4","","","抽象类可以被实例化","如果一个类中有一个方法被声明为抽象的，那么这个类必须是抽象类","抽象类中的方法必须都是抽象的","声明抽象类必须带有关键字abstract","","","147","2"),("691","java中面向对象的特征是","","0","1434430686","1434430686","1","3,4","","","重载","重写","封装","继承","","","147","2"),("692","以下对继承的描述错误的是","","0","1434430771","1434430771","1","1","","","Java中的继承允许一个子类继承多个父类"," 父类更具有通用性，子类更具体"," Java中的继承存在着传递性","当实例化子类时会递归调用父类中的构造方法","","","147","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("693","接口和抽象类描述正确的有","","0","1434430839","1434430839","1","2,3","","","抽象类没有构造函数","接口没有构造函数"," 抽象类不允许多继承","接口中的方法可以有方法体","","","147","2"),("694","以下描述错误的有","","0","1434430946","1434430946","1","3","","","abstract 可以修饰类、接口、方法","abstract修饰的类主要用于被继承","abstract 可以修饰变量","abstract修饰的类，其子类也可以是abstract修饰的","","","147","1"),("695","以下描述正确的有","","0","1434430994","1434430994","1","2","","","方法的重写应用在一个类的内部","方法的重载与返回值类型无关","构造方法不能重载","构造方法可以重写","","","147","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("696","在Java中，多态的实现不仅能减少编码的工作量，还能大大提高程序的可维护性及 可扩展性，那么实现多态的步骤包括以下几个方面除了()。","","0","1434431114","1434431114","1","2","","","子类重写父类的方法"," 子类重载同一个方法","定义方法时，把父类类型作为参数类型；调用方法时，把父类或子类的对象作为参数传入方法"," 运行时，根据实际创建的对象类型动态决定使用哪个方法","","","148","1"),("697"," 访问修饰符作用范围由大到小是","","0","1434431205","1434431205","1","4","","","private-default-protected-public","public-default-protected-private","private-protected-default-public","public-protected-default-private","","","148","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("698","多态的表现形式有","","0","1434431351","1434431351","1","1","","","重写","抽象","继承","封装","","","148","1"),("699","里氏替换原则是java中多态的一种表现形式","","0","1434431407","1434431407","1","1","","","正确","错误","","","","","148","3"),("700","java中 instanceOf，该运算符用来判断一个对象是否属于一个类或者实现了一个接口","","0","1434431687","1434431687","1","1","","","正确","错误","","","","","148","3"),("701","java中方法重写属于运行时多态的表现形式","","0","1434431755","1434431755","1","1","","","正确","错误","","","","","148","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("702","下列叙述中，错误的是","","0","1434431815","1434431815","1","4","","","父类不能替代子类","子类能够替代父类 ","子类继承父类","父类包含子类   ","","","148","1"),("703","在Java中，能实现多重继承效果的方式是","","0","1434431934","1434431934","1","3","","","内部类","适配器","接口","同步","","","149","1"),("704","下列关于继承的哪项叙述是正确的","","0","1434431979","1434431979","1","4","","","在  java  中允许多重继承   ","在  java  中一个类不能同时继承一个类和实现一个接口   ","在  java  中一个类只能实现一个接口   ","java  的单一继承使代码更可靠","","","149","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("705","java中使用接口来实现多重继承","","0","1434432093","1434432093","1","1","","","正确","错误","","","","","149","3"),("706","java接口是特殊的抽象类","","0","1434432171","1434432171","1","1","","","正确","错误","","","","","149","3"),("707","接口中不能有方法的实现可以有变量的声明","","0","1434432195","1434432195","1","2","","","正确","错误","","","","","149","3"),("708","java中声明接口使用interface关键字","","0","1434432278","1434432278","1","1","","","正确","错误","","","","","149","3"),("709","以下关于  Object  类说法错误的是","","0","1434432493","1434432493","1","4","","","一切类都直接或间接继承自Object类","Object类中定义了toString()方法","Object  类在  java.lang  包中","接口亦继承Object类 ","","","149","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("710","Java中的错误处理是通过异常处理模型来完成的．那么异常处理模块可以处理的错误是() ","","0","1434432610","1434432610","1","1","",""," 运行时错","逻辑错误","语法错误","内部错误","","","150","1"),("711","在JAVA中，程序调试是解决程序错误的工具和方法的总称，主要方法包括三个方面。其中不包括","","0","1434432693","1434432693","1","1","","","使用System.out.println输出语句验证变量值	","设置断点","单步调试","观察变量","","","150","0");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("712","下面有关Java异常处理的说法错误的是","","0","1434432747","1434432747","1","1","","","一个try块只能有一条catch语句","一个try块中可以不使用catch语句 ","catch块不能单独使用，必须始终与try块在一起","finally块不能单独使用，必须始终与try块在一起","","","150","1"),("713","下列关键字能和try语句一起使用的是","","0","1434432813","1434432813","1","3,4","","","final","finalize","finally","catch","","","150","2"),("714","以下关于java异常处理的关键字是","","0","1434432978","1434432978","1","1,2,4","","","try","catch","final","throw","","","150","2"),("715","java中异常处理需要手动抛出异常使用关键字是","","0","1434433042","1434433042","1","3","","","try","catch","throw","throws","","","150","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("716","java中ArrayIndexOutOfBoundsException表示数组下标越界","","0","1434433153","1434433153","1","1","","","正确","错误","","","","","150","3"),("717","在java，中ArrayList类实现了可变大小的数组．便于遍历元素和随机访问元素，己 知获得了ArrayList类的对象bookTypeList，则下列语句中能够实现判断列表中是否 存在字符串“小说”的是()．","","0","1434433216","1434433216","1","3","","","bookTypeList add(“小说”)；","bookTypeList．get(“小说”)；","bookTypeList contains(“小说”)；","bookTypeList .removes(“小说”)；","","","151","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("718","在Java中，LinkedList类和Arraylist类同属于集合框架类．下列()选项中的方法是LinkedList类有而Arraylist类没有的  。","","0","1434433284","1434433284","1","4","","","add(Object 0)","add(int index,Object 0)","remove(Object o)","removelast","","","151","1"),("719","在Java,中，以下()对象可以使用键／值的形式保存数据","","0","1434433361","1434433361","1","2","","","LinkedList","HashMap","ArrayList","Arrays","","","151","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("720","对于Java中的集合类java．util．LinkedList，以下说法正确的是","","0","1434433422","1434433422","1","1,3","","","这个集合中的元素是有序的    ","可以通过键来获取这个集合中的元素"," 可以通过addFirst()方法，在列表的首部插入元素","在对这个集合执行遍历操作时，效率比较高","","","151","2"),("721","编译运行这段代码，结果是()。   java．utiI．HashMap map=new java．util．HashMap();     map．put(“name”,null);     map．put(“name”，”Jack”);     System．eut．println(map．get(“name”));","","0","1434433783","1434433783","1","2","","","null","Jack","nullJack","运行时错误","","","151","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("722"," 在Java语言中，欲使下面的程序在运行后输出”Java”，则在下划线处应该填写的代码是()。  ArrayList list=neW ArrayList();     list．add(“HTML”);     list．add(___);输出list．get(list.size()-1)","","0","1434433937","1434433937","1","2","","","“Java”，1","1，“Java”","2，“Java”","“Java”，2","","","151","1");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("723","给定一段JAVA代码如下ArrayList list = new ArrayList( )  list.add(“a”)  list.add(“b”)   Iterator it = list.iterator(  ) ：要打印出list中存储的内容，以下语句正确的是","","0","1434434238","1434434238","1","1,2","","","while(it.hasNext( ) )   system.out.println(it.next( ) ) ","for(int i=0; i<list.size( )  i++)   system.out.println(list.get(i)) ","while(list.hasNext( ) )   system.out.println(list.next( ) )","for(int i=0; i<list.size( )  i++)   system.out.println(it(i)) ","","","151","2"),("724","PHP是Hypertext Preprocessor（超文本预处理器）的缩写，是一种服务器端、跨平台、HTML嵌入式的脚本语言。","","0","1434440230","1434440230","1","1","","","正确","错误","","","","","152","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("725","PHP只支持面向过程开发。","","0","1434440283","1434440283","1","2","","","正确","错误","","","","","152","3"),("726","php可以嵌入在html中进行开发。","","0","1434440303","1434440303","1","1","","","正确","错误","","","","","152","3"),("727","PHP应用领域有哪些？","","0","1434440349","1434440349","1","1,2,3","","","网站","Web系统开发","移动端后台服务支持","大数据分析","","","152","2"),("728","php可以跨平台开发。","","0","1434440463","1434440463","1","1","","","正确","错误","","","","","152","3"),("729","php常用的数据库有哪些？","","0","1434440672","1434440672","1","1,2,3,4","","","access","sql server","mysql","db2","","","152","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("730","php是开源的脚本语言。","","0","1434440817","1434440817","1","1","","","正确","错误","","","","","152","3"),("731","标记符title是放在标记符（  ）之间的","","0","1434440946","1434440946","1","2","","","html","head","body","B","","","153","1"),("732","在<?php  ?>标记中写php代码。","","0","1434441019","1434441019","1","1","","","正确","错误","","","","","153","3"),("733","PHP可以嵌入在html中的任意位置。","","0","1434441089","1434441089","1","1","","","正确","错误","","","","","153","3"),("734","PHP语句使用‘;’结束","","0","1434441133","1434441133","1","1","","","正确","错误","","","","","153","3"),("735","php中的注释有","","0","1434441153","1434441153","1","1,2,3","","","//","#","/**/","<!--  -->","","","153","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("736","php嵌入到HTML语言中的转行标记是","","0","1434441242","1434441242","1","2","","","html","br","title","p","","","153","1"),("737","标题字体标记<hx>中x的最大取值是","","0","1434441384","1434441384","1","3","","","4","5","6","7","","","153","1"),("738","php中变量的作用域","","0","1434441436","1434441436","1","1,2,3","","","local","global","static","auto","","","154","2"),("739","php中标量数据类型包括","","0","1434441541","1434441541","1","1,2,3,4","","","布尔","整型","浮点","字符串型","","","154","2"),("740","php中符合数据类型包括 数组和对象。","","0","1434441627","1434441627","1","1","","","正确","错误","","","","","154","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("741","php中定义常量要在前面加上$.","","0","1434441663","1434441663","1","2","","","正确","错误","","","","","154","3"),("742","is_array()：判断是否为数组","","0","1434441770","1434441770","1","1","","","正确","错误","","","","","154","3"),("743","is_numberic()：判断是否是任何类型的数字和数字字符串","","0","1434441804","1434441804","1","1","","","正确","错误","","","","","154","3"),("744","关于php中变量的命名规则正确的是","","0","1434441860","1434441860","1","1,2,3","","","变量以 $ 符号开头，其后是变量的名称","变量名称必须以字母或下划线开头","变量名称只能包含字母数字字符和下划线","变量名不区分大小写","","","154","2");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("745","php中常用的运算符有哪些？","","0","1434441985","1434441985","1","1,2,3,4","","","+","-","*","%","","","155","2"),("746","php中两个字符串连接使用连接运算符 （.）","","0","1434442071","1434442071","1","1","","","正确","错误","","","","","155","3"),("747","===全等于 两边值相等并且类型相等返回true，否则false","","0","1434442132","1434442132","1","1","","","正确","错误","","","","","155","3"),("748","<>或!=不等于 !== 非全等于两边值或类型有不等时返回true，否则false","","0","1434442166","1434442166","1","1","","","正确","错误","","","","","155","3"),("749","xor  逻辑异或 当两边操作数都为true时，返回true，否则返回false","","0","1434442194","1434442194","1","2","","","正确","错误","","","","","155","3");
INSERT INTO `xsmart_exam`(`id`,`title`,`style`,`listorder`,`updatetime`,`inputtime`,`difficulty`,`answer`,`intro`,`keys`,`key1`,`key2`,`key3`,`key4`,`key5`,`key6`,`courseid`,`type`) VALUES ("750","instanceof类型运算符，用来测定一个给定的对象是否来自指定的对象类","","0","1434442266","1434442266","1","1","","","正确","错误","","","","","155","3"),("751","php中的运算符有哪些？","","0","1434442284","1434442284","1","1,2,3,4","","","算术运算符","逻辑运算符","比较运算符","赋值运算符","","","155","2");
